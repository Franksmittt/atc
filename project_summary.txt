📁 **PROJECT FILE TREE: alberton-tyre-clinic**
├── 📄 .eslintrc.json
├── 📄 .gitignore
├── 📄 README.md
├── 📄 components.json
├── 📄 github_info.txt
├── 📄 next-env.d.ts
├── 📄 next.config.mjs
├── 📄 package.json
├── 📄 postcss.config.mjs
├── 📄 project_scanner.py
├── 📄 tailwind.config.ts
├── 📄 tsconfig.json
│   ├── 📁 src
│   │   ├── 📁 app
│   │   │   ├── 📄 globals.css
│   │   │   ├── 📄 layout.tsx
│   │   │   ├── 📄 page.tsx
│   │   │   ├── 📁 about
│   │   │   │   ├── 📄 page.tsx
│   │   │   ├── 📁 assessment
│   │   │   │   ├── 📄 page.tsx
│   │   │   ├── 📁 blog
│   │   │   │   ├── 📄 page.tsx
│   │   │   │   ├── 📁 [slug]
│   │   │   │   │   ├── 📄 page.tsx
│   │   │   ├── 📁 contact
│   │   │   │   ├── 📄 page.tsx
│   │   │   │   ├── 📁 thanks
│   │   │   │   │   ├── 📄 page.tsx
│   │   │   ├── 📁 fonts
│   │   │   │   ├── 📄 GeistMonoVF.woff
│   │   │   │   ├── 📄 GeistVF.woff
│   │   │   ├── 📁 services
│   │   │   │   ├── 📄 page.tsx
│   │   ├── 📁 components
│   │   │   ├── 📄 theme-provider.tsx
│   │   │   ├── 📄 theme-toggle.tsx
│   │   │   ├── 📁 layout
│   │   │   │   ├── 📄 Footer.tsx
│   │   │   │   ├── 📄 Header.tsx
│   │   │   ├── 📁 sections
│   │   │   │   ├── 📄 BrandSlider.tsx
│   │   │   │   ├── 📄 BrandsOfAuthority.tsx
│   │   │   │   ├── 📄 Hero.tsx
│   │   │   │   ├── 📄 LocalProof.tsx
│   │   │   │   ├── 📄 OptimizedLocalServicePages.tsx
│   │   │   │   ├── 📄 ReviewWall.tsx
│   │   │   │   ├── 📄 ServiceFunnel.tsx
│   │   │   │   ├── 📄 TrustAndProblem.tsx
│   │   │   ├── 📁 ui
│   │   │   │   ├── 📄 button.tsx
│   │   │   │   ├── 📄 dropdown-menu.tsx
│   │   │   │   ├── 📄 input.tsx
│   │   │   │   ├── 📄 sheet.tsx
│   │   │   │   ├── 📄 textarea.tsx
│   │   ├── 📁 hooks
│   │   ├── 📁 lib
│   │   │   ├── 📄 actions.ts
│   │   │   ├── 📄 utils.ts
│   │   │   ├── 📁 db
│   │   │   │   ├── 📄 index.ts
│   │   │   │   ├── 📄 schema.ts
│   │   ├── 📁 types

====================================================================================================

📄 **INDIVIDUAL FILE CONTENTS**

====================================================================================================

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\.eslintrc.json--------------------------------------------------------------------------------{
  "extends": ["next/core-web-vitals", "next/typescript"]
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\.gitignore--------------------------------------------------------------------------------# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\README.md--------------------------------------------------------------------------------This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\components.json--------------------------------------------------------------------------------{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "iconLibrary": "lucide",
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "registries": {}
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\github_info.txt--------------------------------------------------------------------------------Project: alberton-tyre-clinic
GitHub URL: https://github.com/Franksmittt/atc.git
Main Branch: main

--- Common Commands ---

# 1. Check what files have changed
git status

# 2. Add all changed files to be saved
git add .

# 3. Save the changes with a message
git commit -m "Your descriptive message goes here"

# 4. Send your saved changes to GitHub
git push origin main

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\next-env.d.ts--------------------------------------------------------------------------------/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/building-your-application/configuring/typescript for more information.


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\next.config.mjs--------------------------------------------------------------------------------/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\package.json--------------------------------------------------------------------------------{
  "name": "alberton-tyre-clinic",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.2.2",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-slot": "^1.2.3",
    "@vercel/postgres": "^0.10.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "drizzle-orm": "^0.44.7",
    "embla-carousel-react": "^8.6.0",
    "lucide-react": "^0.548.0",
    "next": "14.2.33",
    "next-themes": "^0.4.6",
    "react": "^18",
    "react-dom": "^18",
    "react-hook-form": "^7.65.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "drizzle-kit": "^0.31.6",
    "eslint": "^8",
    "eslint-config-next": "14.2.33",
    "pg": "^8.16.3",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\postcss.config.mjs--------------------------------------------------------------------------------/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\project_scanner.py--------------------------------------------------------------------------------import os

# --- Configuration ---
# Set the root directory for your project
PROJECT_ROOT = r"C:\Users\User1\alberton-tyre-clinic"
# Set the name for the output file
OUTPUT_FILENAME = "project_summary.txt"

# Folders to completely ignore during the scan
EXCLUDE_DIRS = [
    'node_modules',
    '.next',
    '.git',      # Often large and not relevant to the code
    '__pycache__' # Python-specific cache
]

# File extensions to ignore (images, compiled files, etc.)
EXCLUDE_EXTENSIONS = (
    '.jpg', '.jpeg', '.png', '.gif', '.bmp', '.svg', '.ico', # Images
    '.bin', '.dat', '.dll', '.exe', '.obj', '.so', '.wasm',  # Binaries/Compiled
    '.zip', '.rar', '.7z', '.tar', '.gz',                    # Archives
    '.lock'                                                  # Lock files (pnpm-lock.yaml is included below, but this is a good general exclusion)
)

# Individual files to always ignore if found in the root or subfolders
EXCLUDE_FILES = [
    OUTPUT_FILENAME, # Don't try to read the file we are writing to
    'pnpm-lock.yaml' # Explicitly excluding this lock file to keep the output cleaner
]

# --- Core Logic ---

def generate_file_tree(root_dir):
    """Generates a string representation of the file tree, excluding specific paths."""
    tree_lines = [f"📁 **PROJECT FILE TREE: {os.path.basename(root_dir)}**"]

    for root, dirs, files in os.walk(root_dir):
        # Modify dirs in-place to skip excluded folders in future iterations
        dirs[:] = [d for d in dirs if d not in EXCLUDE_DIRS]
        
        # Calculate the current level in the tree
        level = root.replace(root_dir, '').count(os.sep)
        indent = '│   ' * level

        # Add the directory to the tree
        if root != root_dir:
            dir_name = os.path.basename(root)
            tree_lines.append(f"{indent}├── 📁 {dir_name}")
            indent = '│   ' * (level + 1)
        
        # Add files in the current directory
        for file in sorted(files):
            file_path = os.path.join(root, file)
            # Skip excluded files/extensions
            if file.lower() in EXCLUDE_FILES or file.lower().endswith(EXCLUDE_EXTENSIONS):
                continue
            
            tree_lines.append(f"{indent}├── 📄 {file}")
    
    return "\n".join(tree_lines) + "\n\n"

def get_file_contents(root_dir):
    """Iterates through files and reads their content."""
    content_output = []
    
    for root, dirs, files in os.walk(root_dir):
        # Modify dirs in-place to skip excluded folders in future iterations (same as tree generation)
        dirs[:] = [d for d in dirs if d not in EXCLUDE_DIRS]
        
        for file in sorted(files):
            file_path = os.path.join(root, file)
            relative_path = os.path.relpath(file_path, root_dir)
            
            # Skip excluded files/extensions (same as tree generation)
            if file.lower() in EXCLUDE_FILES or file.lower().endswith(EXCLUDE_EXTENSIONS):
                continue
            
            # Try to read the file content
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # Format the file path and content
                content_output.append("-" * 80)
                content_output.append(f"📄 FILE PATH: {file_path}")
                content_output.append("-" * 80)
                content_output.append(content)
                content_output.append("\n\n") # Add extra space after content for separation

            except UnicodeDecodeError:
                # File is likely a binary file or uses an unsupported encoding, skip it
                print(f"Skipping binary/unreadable file: {relative_path}")
            except Exception as e:
                print(f"Error reading file {relative_path}: {e}")

    return "".join(content_output)

def main():
    """Main function to run the script."""
    output_path = os.path.join(PROJECT_ROOT, OUTPUT_FILENAME)

    print(f"Scanning project root: {PROJECT_ROOT}")
    
    # 1. Generate the file tree
    tree_section = generate_file_tree(PROJECT_ROOT)
    
    # 2. Get the content of all included files
    content_section = get_file_contents(PROJECT_ROOT)
    
    # 3. Write everything to the output file
    try:
        with open(output_path, 'w', encoding='utf-8') as outfile:
            outfile.write(tree_section)
            outfile.write("=" * 100 + "\n\n")
            outfile.write("📄 **INDIVIDUAL FILE CONTENTS**\n\n")
            outfile.write("=" * 100 + "\n\n")
            outfile.write(content_section)
        
        print(f"\n✅ Successfully created output file: {output_path}")

    except Exception as e:
        print(f"\n❌ An error occurred while writing the output file: {e}")

if __name__ == "__main__":
    main()

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\tailwind.config.ts--------------------------------------------------------------------------------import type { Config } from "tailwindcss";
// REMOVED: import { withUt } from 'uploadthing/tw' 
// This resolves the TypeScript error code 2307 because the dependency 'uploadthing' is not installed.

const config: Config = {
    // 1. Theme configuration uses CSS variables for light/dark mode
    darkMode: ["class"],
    content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
  	extend: {
  		colors: {
            // SHADCN/UI & GREYSCALES (Links to HSL variables in globals.css)
  			background: 'hsl(var(--background))',
  			foreground: 'hsl(var(--foreground))',
  			card: {
  				DEFAULT: 'hsl(var(--card))',
  				foreground: 'hsl(var(--card-foreground))'
  			},
  			popover: {
  				DEFAULT: 'hsl(var(--popover))',
  				foreground: 'hsl(var(--popover-foreground))'
  			},
            // PRIMARY ACCENT COLOR (TYRE ORANGE: #F17924)
  			primary: {
                // This HSL variable must be set to the Orange color in globals.css
  				DEFAULT: 'hsl(var(--primary))', 
  				foreground: 'hsl(var(--primary-foreground))'
  			},
            // Secondary, Muted, Accent, Destructive are also linked to HSL variables
  			secondary: {
  				DEFAULT: 'hsl(var(--secondary))',
  				foreground: 'hsl(var(--secondary-foreground))'
  			},
  			muted: {
  				DEFAULT: 'hsl(var(--muted))',
  				foreground: 'hsl(var(--muted-foreground))'
  			},
  			accent: {
  				DEFAULT: 'hsl(var(--accent))',
  				foreground: 'hsl(var(--accent-foreground))'
  			},
  			destructive: {
  				DEFAULT: 'hsl(var(--destructive))',
  				foreground: 'hsl(var(--destructive-foreground))'
  			},
            // Border, Input, Ring are utility colors
  			border: 'hsl(var(--border))',
  			input: 'hsl(var(--input))',
  			ring: 'hsl(var(--ring))',
  			chart: {
  				'1': 'hsl(var(--chart-1))',
  				'2': 'hsl(var(--chart-2))',
  				'3': 'hsl(var(--chart-3))',
  				'4': 'hsl(var(--chart-4))',
  				'5': 'hsl(var(--chart-5))'
  			}
  		},
  		borderRadius: {
  			lg: 'var(--radius)',
  			md: 'calc(var(--radius) - 2px)',
  			sm: 'calc(var(--radius) - 4px)'
  		}
  	}
  },
  plugins: [require("tailwindcss-animate")],
};
export default config;

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\tsconfig.json--------------------------------------------------------------------------------{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\globals.css--------------------------------------------------------------------------------/* src/app/globals.css */

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* HSL values for the Grey/White base and the Tyre Orange accent */

  :root {
    --background: 0 0% 100%; /* White BG (Light Mode Default) */
    --foreground: 210 40% 9.8%; /* Near-Black Text */

    /* PRIMARY COLOR DEFINITION (Tyre Orange: #F17924) */
    --primary: 25 90% 55%;
    --primary-foreground: 0 0% 100%; /* White text on Orange */

    --secondary: 210 30% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%; /* Added based on shadcn defaults */
    --muted-foreground: 215.4 16.3% 46.9%; /* Added based on shadcn defaults */

    --accent: 210 40% 96.1%; /* Added based on shadcn defaults */
    --accent-foreground: 222.2 47.4% 11.2%; /* Added based on shadcn defaults */

    --destructive: 0 84.2% 60.2%; /* Added based on shadcn defaults */
    --destructive-foreground: 210 40% 98%; /* Added based on shadcn defaults */

    --border: 214.3 31.8% 91.4%; /* Added based on shadcn defaults */
    --input: 214.3 31.8% 91.4%; /* Added based on shadcn defaults */

    --ring: 25 90% 55%; /* Keep ring as primary color */
    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;

    --popover: 0 0% 100%; /* Added based on shadcn defaults */
    --popover-foreground: 222.2 47.4% 11.2%; /* Added based on shadcn defaults */

    --radius: 0.5rem;
    /* Chart variables (ensure these are defined if used) */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }

  /* Dark Mode Variables */
  .dark {
    --background: 222.2 47.4% 11.2%; /* Dark Charcoal BG (Dark Mode Default) */
    --foreground: 210 40% 98%; /* White Text */

    /* PRIMARY COLOR DEFINITION (Dark Mode) */
    --primary: 25 90% 65%; /* Slightly brighter orange for visibility on dark BG */
    --primary-foreground: 0 0% 100%; /* White text on Orange */

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%; /* Added based on shadcn defaults */
    --muted-foreground: 215 20.2% 65.1%; /* Added based on shadcn defaults */

    --accent: 217.2 32.6% 17.5%; /* Added based on shadcn defaults */
    --accent-foreground: 210 40% 98%; /* Added based on shadcn defaults */

    --destructive: 0 62.8% 30.6%; /* Added based on shadcn defaults */
    --destructive-foreground: 210 40% 98%; /* Added based on shadcn defaults */

    --border: 217.2 32.6% 17.5%; /* Added based on shadcn defaults */
    --input: 217.2 32.6% 17.5%; /* Added based on shadcn defaults */

    --ring: 25 90% 65%; /* Match dark primary */
    --card: 222.2 47.4% 11.2%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 47.4% 11.2%; /* Added based on shadcn defaults */
    --popover-foreground: 210 40% 98%; /* Added based on shadcn defaults */

    /* Chart variables (ensure these are defined if used for dark mode) */
    --chart-1: 210 70% 60%;
    --chart-2: 150 60% 55%;
    --chart-3: 40 80% 65%;
    --chart-4: 270 65% 70%;
    --chart-5: 350 75% 65%;
  }
}

@layer base {
  * {
    @apply border-border; /* Apply border color globally */
  }
  body {
    @apply bg-background text-foreground; /* Apply bg/text colors globally */
    font-feature-settings: "rlig" 1, "calt" 1; /* Enable ligatures */
  }
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\layout.tsx--------------------------------------------------------------------------------// src/app/layout.tsx
import type { Metadata } from "next";
import { ThemeProvider } from "@/components/theme-provider"; // <-- UNCOMMENT THIS LINE
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import "./globals.css";

export const metadata: Metadata = {
  title: "Alberton Tyre Clinic - Your Tyre Experts",
  description: "Tyre sales, fitment, and service in Alberton.",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    // Add suppressHydrationWarning back
    <html lang="en" suppressHydrationWarning>
      <body>
        {/* UNCOMMENT ThemeProvider wrapper */}
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
        >
          <Header />
          <main className="min-h-screen">
              {children}
          </main>
          <Footer />
        </ThemeProvider> {/* <-- UNCOMMENT THIS LINE */}
      </body>
    </html>
  )
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\page.tsx--------------------------------------------------------------------------------// src/app/page.tsx
import React from 'react';
import dynamicImport from 'next/dynamic';

import Hero from '@/components/sections/Hero';
import TrustAndProblem from '@/components/sections/TrustAndProblem';
import BrandsOfAuthority from '@/components/sections/BrandsOfAuthority';
import ReviewWall from '@/components/sections/ReviewWall';
import LocalProof from '@/components/sections/LocalProof';
import ServiceFunnel from '@/components/sections/ServiceFunnel'; // <-- UNCOMMENT THIS IMPORT

// Force dynamic rendering
export const dynamic = 'force-dynamic';

// Dynamically import BrandSlider with SSR turned off
const BrandSlider = dynamicImport(
  () => import('@/components/sections/BrandSlider'),
  { ssr: false }
);

export default function Home() {
  return (
    <main>
      {/* 1. HOOK: High-impact entry point */}
      <Hero />

      {/* 2. AUTHORITY WALL: Brand Slider is placed here for INSTANT CREDIBILITY */}
      <BrandSlider />

      {/* 3. CONTEXT: Establishes Heritage and differentiates the Value */}
      <TrustAndProblem />

      {/* 4. PROOF: Validates the safety claim by showcasing premium brands (Detailed) */}
      <BrandsOfAuthority />

      {/* 5. SOCIAL PROOF: Integrates real customer testimonials */}
      <ReviewWall />

      {/* 6. CONVERSION: Quick metrics */}
      <LocalProof />

      {/* 7. CONVERSION: Service Funnel */}
      <ServiceFunnel /> {/* <-- UNCOMMENT THIS INSTANCE */}

    </main>
  );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\about\page.tsx--------------------------------------------------------------------------------// src/app/about/page.tsx
// Server Component - High trust, low friction page.

import React from 'react';
import Link from 'next/link';
import { Briefcase, MapPin, Users, HeartHandshake } from 'lucide-react';
import { Button } from '@/components/ui/button';
import Image from 'next/image';

// Metadata for SEO and Authority
export const metadata = {
  title: "Alberton Tyre Clinic History | Family-Run Fitment Experts Since 1996",
  description: "Learn about the Alberton Tyre Clinic family legacy. Over 28 years of trusted, honest tyre and brake service in Alberton. Meet the expert staff who prioritize your safety.",
};

export default function AboutPage() {
    return (
        <main>
            {/* Hero Header: History and Trust */}
            <section className="pt-32 pb-20 bg-neutral-900 dark:bg-neutral-950 text-white border-b-8 border-primary">
                <div className="container mx-auto px-4 text-center max-w-4xl">
                    <h1 className="text-5xl font-extrabold mb-4 uppercase">
                        Our <span className="text-primary">28-Year</span> Heritage in Alberton
                    </h1>
                    <p className="text-xl text-neutral-400">
                        A family business founded on honesty, expertise, and a commitment to your vehicle’s safety since 1996.
                    </p>
                </div>
            </section>

            {/* Section 2: The Legacy Story */}
            <section className="py-24 bg-white dark:bg-neutral-800">
                <div className="container mx-auto px-4 max-w-6xl grid md:grid-cols-2 gap-12 items-center">
                    
                    {/* Image Placeholder */}
                    <div className="rounded-xl overflow-hidden shadow-2xl">
                        <Image
                            src="/placeholder-family-shop.jpg" // Placeholder for an old photo or family image
                            alt="Alberton Tyre Clinic team and original shop in 1996"
                            width={800}
                            height={600}
                            priority
                            className="w-full h-auto object-cover"
                        />
                    </div>

                    {/* Story Content */}
                    <div className="space-y-6 text-neutral-800 dark:text-neutral-200">
                        <h3 className="text-3xl font-bold text-primary">
                            From One Bay to a Local Institution
                        </h3>
                        <p className="text-lg">
                            We started in 1996 with a single fitment bay and a simple goal: to provide the most honest, high-quality tyre service in Alberton. While the technology (and the speed of our computerized balancing) has changed, our dedication to treating every customer like family has not.
                        </p>
                        
                        <ul className="space-y-3 pt-3">
                            <li className="flex items-center text-primary font-semibold">
                                <Briefcase className="h-5 w-5 mr-3" />
                                Over two decades of specialized focus on vehicle safety.
                            </li>
                            <li className="flex items-center text-primary font-semibold">
                                <MapPin className="h-5 w-5 mr-3" />
                                Deeply committed to the Alberton community.
                            </li>
                            <li className="flex items-center text-primary font-semibold">
                                <Users className="h-5 w-5 mr-3" />
                                Multi-generational family commitment to the business.
                            </li>
                        </ul>
                    </div>
                </div>
            </section>

            {/* Section 3: Meet the Experts (Staff Authority) */}
            <section className="py-24 bg-neutral-100 dark:bg-neutral-900">
                <div className="container mx-auto px-4 max-w-6xl text-center">
                    <h3 className="text-4xl font-extrabold text-neutral-800 dark:text-white mb-12">
                        Meet the Staff Who Guarantee Your Safety
                    </h3>
                    
                    <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-8">
                        {/* Staff Member 1: Jaco (Manager/Lead) */}
                        <div className="p-6 bg-white dark:bg-neutral-800 rounded-xl shadow-lg border-t-4 border-primary/70">
                            <Image src="/placeholder-jaco.jpg" alt="Jaco" width={200} height={200} className="rounded-full mx-auto mb-4 w-32 h-32 object-cover border-4 border-primary/50" />
                            <h4 className="text-xl font-bold text-neutral-800 dark:text-white">Jaco V.</h4>
                            <p className="text-primary font-semibold mb-3">Shop Manager & Chief Technician</p>
                            <p className="text-sm text-neutral-600 dark:text-neutral-400">
                                Jaco ensures every fitment meets our 1996 standard of excellence. Focused on customer satisfaction and honest advice.
                            </p>
                        </div>

                        {/* Staff Member 2: Shane (Service/Sales) */}
                        <div className="p-6 bg-white dark:bg-neutral-800 rounded-xl shadow-lg border-t-4 border-primary/70">
                            <Image src="/placeholder-shane.jpg" alt="Shane" width={200} height={200} className="rounded-full mx-auto mb-4 w-32 h-32 object-cover border-4 border-primary/50" />
                            <h4 className="text-xl font-bold text-neutral-800 dark:text-white">Shane J.</h4>
                            <p className="text-primary font-semibold mb-3">Sales & Customer Relations</p>
                            <p className="text-sm text-neutral-600 dark:text-neutral-400">
                                Known for quick service and getting customers the best price. Your first point of contact for quotes and queries.
                            </p>
                        </div>
                        
                        {/* Staff Member 3: Carel (Fitment Specialist) */}
                         <div className="p-6 bg-white dark:bg-neutral-800 rounded-xl shadow-lg border-t-4 border-primary/70">
                            <Image src="/placeholder-carel.jpg" alt="Carel" width={200} height={200} className="rounded-full mx-auto mb-4 w-32 h-32 object-cover border-4 border-primary/50" />
                            <h4 className="text-xl font-bold text-neutral-800 dark:text-white">Carel W.</h4>
                            <p className="text-primary font-semibold mb-3">Lead Alignment Technician</p>
                            <p className="text-sm text-neutral-600 dark:text-neutral-400">
                                The expert in 3D wheel alignment, ensuring your high-performance tyres last as long as they should.
                            </p>
                        </div>

                        {/* Staff Member 4: The Team (Collective Trust) */}
                        <div className="p-6 bg-neutral-800 dark:bg-neutral-900 rounded-xl shadow-lg border-t-4 border-primary">
                            <HeartHandshake className="h-16 w-16 text-white mx-auto mt-6 mb-4" />
                            <h4 className="text-2xl font-bold text-primary mb-3">The Full Team</h4>
                            <p className="text-sm text-neutral-300">
                                Every member of the Alberton Tyre Clinic team is dedicated to efficient, honest, and expert service.
                            </p>
                            <Button asChild className="mt-4 bg-primary hover:bg-primary/hover text-white">
                                <Link href="/booking">Book Your Visit</Link>
                            </Button>
                        </div>
                    </div>
                </div>
            </section>

             {/* CTA Section: Repetition of Lead Magnet (Final Conversion Push) */}
            <section className="py-16 bg-primary dark:bg-primary/90 text-white text-center">
                <div className="container mx-auto px-4">
                    <h2 className="text-3xl font-extrabold mb-4">
                        Ready to Join Our Family of Satisfied Drivers?
                    </h2>
                    <p className="text-lg mb-6">
                        Book your FREE 6-Point Vehicle Assessment now and experience the 28-year difference.
                    </p>
                    <Button asChild size="lg" className="bg-white text-primary hover:bg-neutral-100 font-bold">
                        <Link href="/assessment">Book My FREE Assessment</Link>
                    </Button>
                </div>
            </section>
        </main>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\assessment\page.tsx--------------------------------------------------------------------------------// src/app/assessment/page.tsx
"use client"; // Needs to be a Client Component for form handling

import React, { useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { useFormState, useFormStatus } from 'react-dom';
import { createAppointment } from '@/lib/actions';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Car, CheckCircle, ShieldCheck, Wrench, Phone, User, BatteryFull, Lightbulb, Gauge } from 'lucide-react';

// --- Zod Client Schema (Standard form validation) ---
const AssessmentSchema = z.object({
  clientName: z.string().min(3, "Please enter your full name."),
  phoneNumber: z.string().min(10, "A valid 10-digit phone number is required for booking."),
  vehicleMake: z.string().optional(),
  message: z.string().optional(),
});

// Define the type based on the Zod schema
type AssessmentFormData = z.infer<typeof AssessmentSchema>;

// Helper component for the submit button state
function SubmitButton() {
    const { pending } = useFormStatus();
    return (
        <Button
            type="submit"
            size="xl"
            className="w-full text-xl bg-primary hover:bg-primary/hover text-white transition-opacity font-bold py-3"
            disabled={pending}
        >
            {pending ? 'Booking Assessment...' : 'Book Your FREE Assessment Now'}
        </Button>
    );
}

// --- Assessment Page Component ---
export default function AssessmentPage() {
    const { register, handleSubmit, reset, formState: { errors } } = useForm<AssessmentFormData>({ // Use the defined type here
        resolver: zodResolver(AssessmentSchema),
    });
    const [state, dispatch] = useFormState(createAppointment, null);

    useEffect(() => {
        // Check if state exists, has a message, isn't the specific validation failure message, and has no errors object
        if (state && typeof state === 'object' && state !== null && 'message' in state && state.message && state.message !== 'Validation Failed.' && !('errors' in state)) {
            // Success response logic
            reset(); // Clear the form
            alert("Booking successfully submitted! We will call you soon to confirm.");
        }
    }, [state, reset]);


    // Use the specific form data type for the data parameter
    const onSubmit = (data: AssessmentFormData) => {
        const formData = new FormData();
        // Loop through the keys of the validated data and append to FormData
        Object.keys(data).forEach(key => {
          // Type assertion to ensure key is valid for AssessmentFormData
          const typedKey = key as keyof AssessmentFormData;
          const value = data[typedKey];
          // Append only if the value is not undefined or null
          if (value !== undefined && value !== null) {
            formData.append(typedKey, String(value));
          }
        });
        formData.append('serviceType', 'FREE 6-Point Assessment'); // Add hidden value
        dispatch(formData);
    };

    return (
        <main>
            {/* 1. HERO: High-Impact Value Proposition (H1 and Trust) */}
            <section className="pt-32 pb-20 bg-neutral-900 text-white border-b-8 border-primary">
                <div className="container mx-auto px-4 text-center max-w-4xl">
                    <h1 className="text-5xl md:text-6xl font-extrabold mb-4 uppercase leading-tight">
                        Claim Your FREE 6-Point Vehicle Safety Assessment
                    </h1>
                    <p className="text-xl md:text-2xl text-primary font-bold mb-6">
                        Stop Guessing. Start Driving Safely. (No obligation. Zero cost.)
                    </p>
                    <div className="flex justify-center space-x-8 text-lg font-medium">
                        <span className="flex items-center"><CheckCircle className="h-5 w-5 mr-2 text-primary" /> Tyres, Brakes & Shocks</span>
                         <span className="flex items-center"><CheckCircle className="h-5 w-5 mr-2 text-primary" /> Full Battery Test</span>
                    </div>
                </div>
            </section>

            {/* 2. VALUE & FORM: Conversion Core */}
            <section className="py-24 bg-white dark:bg-neutral-800">
                 <div className="container mx-auto px-4 max-w-6xl">
                    <div className="grid lg:grid-cols-2 gap-16 items-start">

                        {/* A. Assessment Value & Breakdown */}
                         <div className="space-y-8">
                            <h2 className="text-4xl font-extrabold text-neutral-800 dark:text-white">
                                Why Is This Assessment Crucial?
                            </h2>
                            <p className="text-lg text-neutral-600 dark:text-neutral-400">
                                Tyres are only part of the safety equation. Our **Alberton Tyre Clinic** experts check the entire system that keeps you on the road safely—all completely free.
                            </p>

                            <div className="space-y-4">
                                <h3 className='text-2xl font-bold text-primary'>The 6-Point Safety Checklist:</h3>
                                {[
                                     { icon: Car, title: "Tyre Tread & Pressure", detail: "Checking all four tyres for wear, damage, and correct inflation." },
                                     { icon: ShieldCheck, title: "Brakes & Discs Visual Check", detail: "Assessment of brake pad wear and disc condition (critical for stopping)." },
                                     { icon: Gauge, title: "Shocks & Suspension (Visual)", detail: "Checking for leaks or damage that compromises handling." },
                                     { icon: Wrench, title: "Wheel Alignment Check", detail: "A quick diagnosis for correct steering geometry." },
                                     { icon: BatteryFull, title: "Full Battery Health Test", detail: "Check voltage and CCA for winter readiness." },
                                     { icon: Lightbulb, title: "Fluid & Lights Check", detail: "Windscreen wipers, oil level, and lights checked for compliance." },
                                ].map((item, index) => (
                                    <div key={index} className="flex items-start p-3 bg-neutral-50 dark:bg-neutral-900 rounded-lg shadow-sm border-l-4 border-primary">
                                         <item.icon className="h-6 w-6 text-primary mr-4 mt-1 flex-shrink-0" />
                                        <div>
                                             <p className="font-semibold text-neutral-800 dark:text-white">{item.title}</p>
                                            <p className="text-sm text-neutral-600 dark:text-neutral-400">{item.detail}</p>
                                        </div>
                                    </div>
                                ))}
                            </div>
                         </div>

                        {/* B. The Booking Form */}
                        <div className="sticky top-10 p-8 bg-neutral-100 dark:bg-neutral-900 rounded-xl shadow-2xl border-t-8 border-primary">
                             <h2 className="text-3xl font-bold text-neutral-800 dark:text-white mb-6 text-center">
                                Secure Your FREE Booking
                            </h2>
                             <form onSubmit={handleSubmit(onSubmit)} className="space-y-5">

                                {/* Name Input */}
                                 <div>
                                    <label htmlFor="clientName" className="flex items-center text-sm font-medium mb-1 dark:text-neutral-300">
                                        <User className="h-4 w-4 mr-2" /> Full Name
                                    </label>
                                    <Input
                                        id="clientName"
                                        type="text"
                                        placeholder="Your Full Name"
                                        {...register("clientName")}
                                        className={errors.clientName ? 'border-destructive' : ''}
                                    /> {/* Ensure this closes correctly */}
                                    {errors.clientName && <p className="text-sm text-destructive mt-1">{errors.clientName.message?.toString()}</p>}
                                    {/* Display Server-Side Validation Error (if it exists) */}
                                    {state && typeof state === 'object' && state !== null && 'errors' in state && state.errors && 'clientName' in state.errors && state.errors.clientName && <p className="text-sm text-destructive mt-1">{state.errors.clientName.join(', ')}</p>}
                                 </div>

                                {/* Phone Input (Crucial for lead capture) */}
                                <div>
                                     <label htmlFor="phoneNumber" className="flex items-center text-sm font-medium mb-1 dark:text-neutral-300">
                                        <Phone className="h-4 w-4 mr-2" /> Best Contact Number
                                     </label>
                                    <Input
                                        id="phoneNumber"
                                        type="tel"
                                        placeholder="082 555 1234"
                                        {...register("phoneNumber")}
                                        className={errors.phoneNumber ? 'border-destructive' : ''}
                                    /> {/* Ensure this closes correctly */}
                                    {errors.phoneNumber && <p className="text-sm text-destructive mt-1">{errors.phoneNumber.message?.toString()}</p>}
                                     {/* Display Server-Side Validation Error (if it exists) */}
                                    {state && typeof state === 'object' && state !== null && 'errors' in state && state.errors && 'phoneNumber' in state.errors && state.errors.phoneNumber && <p className="text-sm text-destructive mt-1">{state.errors.phoneNumber.join(', ')}</p>}
                                 </div>

                                {/* Vehicle Make (Optional but highly useful for quoting) */}
                                <div>
                                     <label htmlFor="vehicleMake" className="text-sm font-medium mb-1 dark:text-neutral-300 block">
                                        Vehicle Make & Model (e.g., Ford Ranger)
                                     </label>
                                    <Input
                                        id="vehicleMake"
                                        type="text"
                                        placeholder="e.g., Toyota Corolla 2018"
                                        {...register("vehicleMake")}
                                    /> {/* Ensure this closes correctly */}
                                </div>

                                {/* Message Input */}
                                 <div>
                                    <label htmlFor="message" className="text-sm font-medium mb-1 dark:text-neutral-300 block">
                                         Quick Note (e.g., &quot;Squeaky brakes&quot;) {/* Escaped quotes */}
                                    </label>
                                     <Textarea
                                        id="message"
                                        placeholder="Any specific concerns you want us to check?"
                                        {...register("message")}
                                    /> {/* Ensure this closes correctly */}
                                </div>

                                {/* Submit Button */}
                                <SubmitButton />


                                {/* Privacy/Trust Anchor */}
                                <p className="text-xs text-center text-neutral-500 dark:text-neutral-400 mt-3">
                                    We promise: No Spam. No Obligation. Just an honest safety check from Alberton&apos;s family-run team. {/* Escaped apostrophe */}
                                </p>
                                {/* Display general Server-Side Validation Failure Message */}
                                {state && typeof state === 'object' && state !== null && 'message' in state && state.message === 'Validation Failed.' && (
                                     <p className="text-sm text-destructive font-bold pt-2 text-center">
                                         Please correct the errors above.
                                     </p>
                                )}
                                {/* Display other server-side messages (e.g., unexpected error) */}
                                 {state && typeof state === 'object' && state !== null && 'message' in state && state.message && state.message !== 'Validation Failed.' && !('errors' in state) && (
                                     <p className="text-sm text-destructive font-bold pt-2 text-center">
                                         {state.message}
                                     </p>
                                )}
                            </form>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\blog\page.tsx--------------------------------------------------------------------------------// src/app/blog/page.tsx
// Server Component - Optimized for listing and SEO keywords.

import React from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

// Force this page to be dynamically rendered to avoid potential static generation issues
export const dynamic = 'force-dynamic'; // <<<--- ADDED THIS LINE

// --- Metadata: Targeted for Blog SEO ---
export const metadata = {
  title: "Car Maintenance Blog & Tyre Safety Tips | Alberton Tyre Clinic",
  description: "Expert advice on vehicle safety, tyre longevity, brake systems, and minor vehicle servicing. Read honest, local content from our Alberton experts.",
};

// --- Mock Data: Simulates fetching data from Drizzle ORM (posts table) ---
const MOCK_POSTS = [
    {
        id: 1,
        slug: "pirelli-vs-michelin-safety-alberton",
        title: "Pirelli vs. Michelin: Which Tyre Guarantees More Safety on Alberton Roads?",
        category: "Tyres & Safety",
        excerpt: "A deep dive into the performance metrics of our two premium tyre brands and how they handle common hazards on South African roads.",
    },
    {
        id: 2,
        slug: "stop-the-squeal-ate-brakes-vs-generic",
        title: "Stop the Squeal: ATE Brakes vs. Generic Systems—Your Safety Investment.",
        category: "Brakes & Shocks",
        excerpt: "Understanding why we only recommend ATE and how generic brake pads compromise your stopping distance and overall vehicle safety.",
    },
    {
        id: 3,
        slug: "shock-absorber-warning-signs",
        title: "5 Warning Signs Your Shock Absorbers are Failing (And Why You Need a Free Check)",
        category: "Suspension & Servicing",
        excerpt: "Ignoring shocks affects steering, braking, and tyre wear. Know the signs and book your free diagnostic assessment today.",
    },
];

export default function BlogIndexPage() {
    return (
        <main>
            {/* Blog Header */}
            <section className="pt-32 pb-20 bg-neutral-900 text-white border-b-8 border-primary">
                <div className="container mx-auto px-4 text-center max-w-4xl">
                     <h1 className="text-5xl font-extrabold mb-4 uppercase">
                        Expert <span className="text-primary">Safety</span> & Maintenance Insights
                    </h1>
                    <p className="text-xl text-neutral-400">
                         Content written by our 28-year experienced technicians to keep you and your family safe on the road.
                    </p>
                </div>
            </section>

            {/* Posts Grid */}
            <section className="py-24 bg-white dark:bg-neutral-800">
                 <div className="container mx-auto px-4 max-w-5xl">
                    <div className="grid md:grid-cols-3 gap-8">
                        {MOCK_POSTS.map((post) => (
                            <div
                                key={post.id}
                                className="bg-neutral-50 dark:bg-neutral-900 p-6 rounded-lg shadow-lg border-t-4 border-primary/50 hover:shadow-xl transition-shadow"
                            >
                                 <h3 className="text-xl font-bold text-neutral-800 dark:text-white mb-2">
                                    {post.title}
                                 </h3>
                                <p className="text-sm text-primary font-semibold mb-3">
                                    {post.category}
                                 </p>
                                <p className="text-neutral-600 dark:text-neutral-400 mb-4 text-base">
                                    {post.excerpt}
                                 </p>
                                <Button variant="link" asChild className="p-0 h-auto text-primary justify-start font-bold">
                                    <Link href={`/blog/${post.slug}`}>
                                         Read Full Article →
                                    </Link>
                                </Button>
                             </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Final CTA: Reiterate Lead Magnet */}
            <section className="py-16 bg-neutral-100 dark:bg-neutral-900 text-center">
                <Button asChild size="lg" className="bg-primary hover:bg-primary/hover text-white font-bold">
                    <Link href="/assessment">Got a Question? Book Your FREE Assessment Now</Link>
                </Button>
            </section>
        </main>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\blog\[slug]\page.tsx--------------------------------------------------------------------------------// src/app/blog/[slug]/page.tsx
// Dynamic Server Component - Optimized for Article Content.

import React from 'react';
import Link from 'next/link';
import { Briefcase } from 'lucide-react';
import { notFound } from 'next/navigation';

// 💥 FIX: ADD THE MISSING BUTTON IMPORT 💥
import { Button } from '@/components/ui/button';

// --- MOCK Data Fetcher (Replaced by Drizzle/Database in production) ---
const fetchPostBySlug = async (slug: string) => {
    // In a real application, this would query the Drizzle ORM:
    // const post = await db.query.posts.findFirst({ where: eq(posts.slug, slug) });
    
    // Using mock data for immediate compilation and testing
    const POSTS = [
        {
            slug: "pirelli-vs-michelin-safety-alberton",
            title: "Pirelli vs. Michelin: Which Tyre Guarantees More Safety on Alberton Roads?",
            content: `<p>Choosing the right tyre is the single most important safety decision you make. For Alberton's mix of highway and local roads, we break down why both Pirelli and Michelin offer superior performance over budget brands...</p>
                      <h3>Why Pirelli Excels on Wet Alberton Roads</h3>
                      <p>Pirelli's advanced tread compounds provide optimal grip in wet conditions, a necessity during our high summer rainfall months. This translates directly to shorter stopping distances when you need it most. We are your official local dealer...</p>
                      <h3>Michelin: Longevity Meets Performance</h3>
                      <p>Michelin often leads in tread life and fuel efficiency. If you are a high-mileage driver in Alberton, investing in Michelin means fewer replacements and better long-term value. Our computerized fitting ensures you get maximum life out of every rotation...</p>`,
            author: "Jaco V.",
            published: "October 28, 2025",
        },
        // ... include other posts here for testing ...
    ];

    return POSTS.find(p => p.slug === slug);
};

// --- SEO Feature 1: Dynamic Metadata (Top-Tier Google Performance) ---
export async function generateMetadata({ params }: { params: { slug: string } }) {
  const post = await fetchPostBySlug(params.slug);

  if (!post) {
    return { title: "Article Not Found | Alberton Tyre Clinic" };
  }

  return {
    title: `${post.title} | Alberton Tyre Clinic`,
    description: post.content.substring(0, 150) + "...", // Use a snippet as the meta description
  };
}

// --- SEO Feature 2: Static Path Generation (Fast Loading/Pre-rendering) ---
export async function generateStaticParams() {
    // In production, fetch ALL post slugs from the Drizzle DB here
    return [
        { slug: "pirelli-vs-michelin-safety-alberton" },
        { slug: "stop-the-squeal-ate-brakes-vs-generic" },
        { slug: "shock-absorber-warning-signs" },
    ];
}


// --- The Core Article Component ---
export default async function SinglePostPage({ params }: { params: { slug: string } }) {
    const post = await fetchPostBySlug(params.slug);

    if (!post) {
        notFound(); // Renders the default Next.js 404 page
    }

    return (
        <main>
            {/* Article Header */}
            <section className="pt-32 pb-16 bg-neutral-900 text-white border-b border-primary/50">
                <div className="container mx-auto px-4 max-w-4xl">
                    <h1 className="text-4xl md:text-5xl font-extrabold mb-4 text-primary">
                        {post.title}
                    </h1>
                    <div className="flex items-center text-sm text-neutral-400 space-x-4">
                        <span className="flex items-center">
                            <Briefcase className="h-4 w-4 mr-1" /> By {post.author || "The ATC Team"}
                        </span>
                        <span>
                            Published on {post.published}
                        </span>
                    </div>
                </div>
            </section>

            {/* Article Content */}
            <section className="py-16 bg-white dark:bg-neutral-800">
                <div className="container mx-auto px-4 max-w-4xl text-neutral-800 dark:text-neutral-200">
                    
                    {/* WARNING: Using dangerouslySetInnerHTML is required for HTML/Markdown content */}
                    <div 
                        className="prose dark:prose-invert prose-lg max-w-none prose-headings:text-primary prose-a:text-primary"
                        dangerouslySetInnerHTML={{ __html: post.content }}
                    />

                    <div className="mt-16 border-t border-neutral-200 dark:border-neutral-700 pt-8">
                        <Button variant="outline" asChild size="lg" className="border-primary text-primary hover:bg-primary/5 dark:text-primary dark:border-primary">
                            <Link href="/blog">← Back to Blog Index</Link>
                        </Button>
                    </div>
                </div>
            </section>
        </main>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\contact\page.tsx--------------------------------------------------------------------------------// src/app/contact/page.tsx
"use client"; // This page must be a client component to use React Hook Form

import React, { useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { useFormState, useFormStatus } from 'react-dom';
import { createAppointment } from '@/lib/actions';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Phone, User, MessageSquare, MessageSquareText } from 'lucide-react';

// --- Zod Client Schema (Used for Client-Side UX Validation) ---
const ClientSchema = z.object({
  clientName: z.string().min(3, "Please enter your name."),
  phoneNumber: z.string().min(10, "A valid 10-digit phone number is required."),
  serviceType: z.string().optional(),
  message: z.string().optional(),
}); //

// Define the type based on the Zod schema
type ClientFormData = z.infer<typeof ClientSchema>;

// Helper component for the submit button state (to show 'Submitting...')
function SubmitButton() {
    // Hooks into the Server Action state (pending/loading)
    const { pending } = useFormStatus();
    return (
        <Button
            type="submit"
            size="lg"
            className="w-full bg-primary hover:bg-primary/hover text-white transition-opacity"
            disabled={pending}
        >
            {pending ? 'Submitting Request...' : 'Book My Assessment'}
        </Button>
    ); //
}


export default function ContactPage() {
    // 1. React Hook Form setup for client-side validation and state
    const { register, handleSubmit, reset, formState: { errors } } = useForm<ClientFormData>({ // Use the defined type
        resolver: zodResolver(ClientSchema),
    });
    // 2. Next.js Server Action State setup
    const [state, dispatch] = useFormState(createAppointment, null);

    // 3. Effect to handle server response (clear form on success, show error)
    useEffect(() => {
        // Check if state exists, has a message, isn't validation failure, and has no errors object
         if (state && typeof state === 'object' && state !== null && 'message' in state && state.message && state.message !== 'Validation Failed.' && !('errors' in state)) {
            // Success response triggers redirection via the Server Action itself (redirect('/contact/thanks'))
            reset(); // Clear the form fields
        }
    }, [state, reset]);

    // 4. Client-side submit handler (validates, then dispatches Server Action)
    const onSubmit = (data: ClientFormData) => { // Use the defined type
        // Create a FormData object for the Server Action
        const formData = new FormData();
         // Loop through the keys of the validated data and append to FormData
         Object.keys(data).forEach(key => {
            // Type assertion to ensure key is valid for ClientFormData
            const typedKey = key as keyof ClientFormData;
            const value = data[typedKey];
            // Append only if the value is not undefined or null
            if (value !== undefined && value !== null) {
              formData.append(typedKey, String(value));
            }
          });

        // Dispatch the Server Action
        dispatch(formData);
    };

    return (
        <main>
            {/* Header */}
            <section className="pt-32 pb-20 bg-neutral-900 text-white border-b-8 border-primary">
                <div className="container mx-auto px-4 text-center max-w-4xl">
                    <h1 className="text-5xl font-extrabold mb-4 uppercase">
                         Book Your <span className="text-primary">Free Safety Assessment</span>
                    </h1> {/* */}
                    <p className="text-xl text-neutral-400">
                        Use the secure form below or WhatsApp us directly. Safety and service guaranteed by our Alberton team.
                    </p> {/* */}
                </div>
            </section>

            {/* Form & Contact Info */}
            <section className="py-24 bg-white dark:bg-neutral-800">
                <div className="container mx-auto px-4 max-w-5xl">
                     <div className="grid lg:grid-cols-2 gap-12"> {/* */}

                        {/* Contact Info Column (High-Intent, Enhanced) */}
                        <div className="space-y-6
 text-neutral-800 dark:text-neutral-200 p-6 rounded-lg bg-neutral-50 dark:bg-neutral-900 border border-neutral-200 dark:border-neutral-700 h-full"> {/* */}
                            <h2 className="text-3xl font-bold text-primary mb-6">Need Urgent Help?</h2>

                            <p className="text-lg mb-8">
                                Don&apos;t wait for a form. Call or message our team directly for immediate service in Alberton. {/* Escaped apostrophe */}
                            </p>

                            <div className="space-y-6">
                                {/* Direct Call Link */}
                                 <a href="tel:+27119078495" className="flex items-center text-2xl font-extrabold text-primary hover:text-primary/70 transition-colors"> {/* */}
                                    <Phone className="h-7 w-7 mr-3 text-primary" />
                                    +27 11 907 8495
                                </a>

                                {/* WhatsApp Link (High-Conversion) */}
                                 <a href="https://wa.me/27119078495?text=Hello%2C%20I%20need%20urgent%20help%20with%20my%20tyres." target="_blank" rel="noopener noreferrer" className="flex items-center text-2xl font-extrabold text-[#25D366] hover:text-[#128C7E] transition-colors"> {/* */}
                                    <MessageSquareText className="h-7 w-7 mr-3" />
                                    WhatsApp Us Now
                                 </a> {/* */}
                            </div>

                            {/* Hours Block */}
                             <div className="pt-8 border-t border-neutral-300 dark:border-neutral-700"> {/* */}
                                <h3 className='text-xl font-bold mb-2'>Operational Hours</h3>
                                <div className="text-neutral-600 dark:text-neutral-400 space-y-1">
                                     {/* Updated Hours based on user request */}
                                    <p>Monday - Tuesday: 08:00 - 17:00</p>
                                     <p>Wednesday - Friday: 08:00 - 17:00</p> {/* */}
                                    <p>Saturday: 08:00 - 12:00</p>
                                    <p>Sunday: Closed</p>
                                 </div> {/* */}
                            </div>
                        </div>

                        {/* Form Column */}
                         <div className="bg-white dark:bg-neutral-950 p-6 rounded-lg shadow-xl border border-neutral-200 dark:border-neutral-700"> {/* */}
                            <h2 className="text-3xl font-bold text-neutral-800 dark:text-white mb-6">Request a Call Back</h2>

                             {/* Form uses the handleSubmit wrapper from React Hook Form */}
                            <form onSubmit={handleSubmit(onSubmit)} className="space-y-4"> {/* */}

                                 {/* Name Input */}
                                <div> {/* */}
                                    <label htmlFor="clientName" className="flex items-center text-sm
 font-medium mb-1 dark:text-neutral-300"> {/* */}
                                        <User className="h-4 w-4 mr-2" /> Full Name
                                    </label>
                                     <Input
                                        id="clientName"
                                         type="text" //
                                        placeholder="John Smith"
                                        {...register("clientName")}
                                         className={errors.clientName ? 'border-destructive' : ''} //
                                    />
                                    {/* Display Client-Side Validation Error */}
                                     {errors.clientName && <p className="text-sm text-destructive mt-1">{errors.clientName.message?.toString()}</p>} {/* */}
                                    {/* Display Server-Side Validation Error (if it exists) */}
                                    {state && typeof state === 'object' && state !== null && 'errors' in state && state.errors && 'clientName' in state.errors && state.errors.clientName && <p className="text-sm text-destructive mt-1">{state.errors.clientName.join(', ')}</p>} {/* */}
                                </div>

                                {/* Phone Input */}
                                 <div> {/* */}
                                    <label htmlFor="phoneNumber" className="flex items-center text-sm font-medium mb-1 dark:text-neutral-300">
                                        <Phone className="h-4 w-4 mr-2" /> Phone Number
                                    </label> {/* */}
                                    <Input
                                         id="phoneNumber" //
                                        type="tel"
                                        placeholder="082 555 1234"
                                         {...register("phoneNumber")} //
                                        className={errors.phoneNumber ? 'border-destructive' : ''}
                                    /> {/* */}
                                    {errors.phoneNumber && <p className="text-sm text-destructive mt-1">{errors.phoneNumber.message?.toString()}</p>}
                                     {state && typeof state === 'object' && state !== null && 'errors' in state && state.errors && 'phoneNumber' in state.errors && state.errors.phoneNumber && <p className="text-sm text-destructive mt-1">{state.errors.phoneNumber.join(', ')}</p>} {/* */}
                                </div>

                                {/* Service Type (Example of selecting a service) */}
                                 <div> {/* */}
                                    <label htmlFor="serviceType" className="text-sm font-medium mb-1 dark:text-neutral-300 block">
                                         Service Required (Optional) {/* */}
                                    </label>
                                    <select
                                         id="serviceType" //
                                        {...register("serviceType")}
                                         className="w-full p-2 border border-input rounded-md bg-background text-foreground" //
                                    >
                                        <option value="">I need a Free Assessment</option>
                                         <option value="Tyre Quote">Tyre Quote</option> {/* */}
                                        <option value="Brake/Shock Quote">Brake/Shock Quote</option>
                                         <option value="Minor Service">Minor Service</option> {/* */}
                                    </select>
                                </div>

                                 {/* Message Input */}
                                <div> {/* */}
                                    <label htmlFor="message" className="flex items-center text-sm font-medium mb-1 dark:text-neutral-300">
                                         <MessageSquare className="h-4 w-4 mr-2" /> Message {/* */}
                                    </label>
                                       <Textarea
                                        id="message"
                                        placeholder="e.g., Need 2 Pirelli tyres for a Golf 7..."
                                        {...register("message")}
                                    /> {/* */}
                                 </div> {/* */}

                                {/* Submit Button with Server Action status */}
                                <SubmitButton />

                                 {/* Server-Side Validation Failure Messages (General) */}
                                {state?.message && state.message === 'Validation Failed.' && (
                                     <p className="text-sm text-destructive font-bold pt-2 text-center">
                                         Please correct the errors above.
                                     </p>
                                )}
                                {/* Other Server Messages */}
                                {state?.message && state.message !== 'Validation Failed.' && !state.errors && (
                                    <p className="text-sm text-destructive font-bold pt-2 text-center">
                                        {state.message}
                                     </p> //
                                )}
                            </form>
                         </div> {/* */}
                    </div>
                </div>
            </section>
        </main>
    );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\contact\thanks\page.tsx--------------------------------------------------------------------------------// src/app/contact/thanks/page.tsx
import React from 'react';
import Link from 'next/link';

export default function ThankYouPage() {
    return (
        <main className="min-h-screen pt-32 pb-20 bg-neutral-100 dark:bg-neutral-900 text-center flex items-center justify-center">
            <div className="container max-w-xl p-8 bg-white dark:bg-neutral-800 rounded-xl shadow-2xl border-t-4 border-primary">
                <h1 className="text-4xl font-extrabold text-primary mb-4">Thank You!</h1>
                <p className="text-xl text-neutral-800 dark:text-neutral-200 mb-6">
                    Your appointment request has been received by our Alberton team.
                </p>
                <p className="text-lg text-neutral-600 dark:text-neutral-400 mb-8">
                    We will be in touch shortly via phone to confirm your **FREE Assessment** time and details.
                </p>
                <Link href="/" className="text-primary font-bold hover:underline">
                    ← Back to Homepage
                </Link>
            </div>
        </main>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\app\services\page.tsx--------------------------------------------------------------------------------// src/app/services/page.tsx
// Server Component - Engineered for Local SEO Ranking.

import React from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
// Removed unused 'RotateCw' import
import { Car, Wrench, Zap, BatteryCharging, Disc3, Shield } from 'lucide-react';

// --- Metadata: Targeted for High-Volume SEO Keywords ---
export const metadata = {
  // Target keywords: Tyre Brands, Fitment, Brakes, Alignment, Alberton
  title: "Car Servicing, Tyres, Brakes & Alignment | Alberton Fitment Experts",
  description: "Official Pirelli & ATE dealer offering Minor Vehicle Servicing, 3D Wheel Alignment, and guaranteed safety components in Alberton. Book your service online now.",
};

// Data Structure for the Strategically Mapped Services
const SEO_MAPPED_SERVICES = [
  {
    icon: <Shield className="h-8 w-8 text-white" />,
    title: "FREE 6-Point Safety Check",
    description: "The mandatory first step. We check shocks, brakes, battery health, and tyre wear to identify hidden defects. Book your free check online.",
    link: "/assessment",
    cta: "Book Free Check",
  },
  {
    icon: <Car className="h-8 w-8 text-white" />,
    title: "Premium Tyre Sales & Fitment",
    description: "Official dealers for Pirelli, Michelin, and 8 top brands. Precision fitting, computerized alignment, and balancing for maximum safety.",
    link: "/services/tyres",
    cta: "Shop Brands & Book",
  },
  {
    icon: <Wrench className="h-8 w-8 text-white" />,
    title: "Minor Vehicle Servicing",
    description: "Proactive scheduled maintenance: oil changes, fluid and filter replacements. Shifts focus from reactive repairs to guaranteed longevity.",
    link: "/services/minor-service",
    cta: "Schedule Service",
  },
  {
    icon: <Disc3 className="h-8 w-8 text-white" />,
    title: "Brakes & Shocks (ATE & Bilstein)",
    description: "Expert installation of ATE Brakes and Bilstein Shocks. We guarantee road holding, safety, and reliable performance with premium brands.",
    link: "/services/brakes-shocks",
    cta: "Get Quote",
  },
  {
    icon: <Zap className="h-8 w-8 text-white" />,
    title: "Wheel Alignment & Balancing",
    description: "Mandatory for high-mileage warranties. State-of-the-art 3D alignment ensures safety, fuel efficiency, and max tyre life.",
    link: "/services/alignment",
    cta: "Book Alignment",
  },
  {
    icon: <BatteryCharging className="h-8 w-8 text-white" />,
    title: "Battery Sales & Diagnostics",
    description: "Urgent replacement service. High-quality Willard, Exide, and ATLASBX batteries with reliable warranties and free on-site testing.",
    link: "/services/batteries",
    cta: "Check Battery Price",
  },
];


export default function ServicesPage() {
  return (
    <main>
      {/* Services Header: Reinforces New Identity (Minor Maintenance Center) */}
      <section className="pt-32 pb-20 bg-neutral-900 text-white border-b-8 border-primary">
        <div className="container mx-auto px-4 max-w-5xl">
          <h1 className="text-5xl font-extrabold mb-4 uppercase text-center">
             Your <span className="text-primary">Full-Service</span> Vehicle Maintenance Center
          </h1>
          <p className="text-xl text-neutral-400 text-center">
            We offer expert tyre fitment, routine minor servicing, and safety component replacement—all backed by a 28-year family guarantee in Alberton.
          </p>
        </div>
      </section>

      {/* Core Services Grid: SEO-Mapped Funnel */}
       <section className="py-24 bg-neutral-50 dark:bg-neutral-900"> {/* */}
        <div className="container mx-auto px-4 max-w-6xl">

          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {SEO_MAPPED_SERVICES.map((service) => (
              <div
                key={service.title}
                 className="bg-white dark:bg-neutral-950 p-6 rounded-lg shadow-xl border border-neutral-200 dark:border-neutral-700
                           hover:shadow-2xl hover:border-primary transition-all duration-300 transform hover:-translate-y-1 flex flex-col justify-between" //
              >
                <div>
                    <div className="w-16 h-16
 bg-primary flex items-center justify-center rounded-full mb-4"> {/* */}
                        {service.icon}
                    </div>
                    <h3 className="text-2xl font-bold text-neutral-800 dark:text-white mb-3">
                        {service.title}
                     </h3> {/* */}
                    <p className="text-neutral-600 dark:text-neutral-400 mb-4 text-base">
                        {service.description}
                    </p>
                 </div> {/* */}
                <Button asChild className="p-0 h-auto text-primary justify-start font-bold">
                    <Link href={service.link}>
                        {service.cta} →
                    </Link>
                 </Button> {/* */}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section: Guarantee Lock-In Marketing */}
      <section className="py-16 bg-primary dark:bg-primary/90 text-white text-center">
          <div className="container mx-auto px-4 max-w-4xl">
               <h2 className="text-3xl font-extrabold mb-4">
                  Protect Your Investment: The High-Mileage Guarantee
              </h2> {/* */}
              <p className="text-lg mb-6">
                  Tyre guarantees require mandatory service. Maintain your warranty by booking your routine
                  <span className='font-bold underline'>Alignment & Balancing every 10,000 km</span> exclusively with us.
              </p> {/* */}
              <Button asChild size="lg" className="bg-white text-primary hover:bg-neutral-100 font-bold">
                  <Link href="/booking">Book Your Next 10,000 km Service</Link>
              </Button>
          </div>
      </section>
    </main>
  );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\theme-provider.tsx--------------------------------------------------------------------------------// src/components/theme-provider.tsx
"use client"

import * as React from "react"
import { ThemeProvider as NextThemesProvider } from "next-themes"

// Define the internal types expected by the next-themes package for stability.
type Attribute = 'class' | 'data-theme';

interface ThemeProviderProps {
  children: React.ReactNode;
  attribute?: Attribute | Attribute[] | undefined; // Corrected type
  defaultTheme?: string;
  enableSystem?: boolean;
  disableTransitionOnChange?: boolean;
  storageKey?: string;
}

/**
 * Wrapper for next-themes provider to enable theme switching in client components.
 */
export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
  return <NextThemesProvider {...props}>{children}</NextThemesProvider>
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\theme-toggle.tsx--------------------------------------------------------------------------------// src/components/theme-toggle.tsx
"use client"

import * as React from "react"
import { Moon, Sun } from "lucide-react"
import { useTheme } from "next-themes"

import { Button } from "@/components/ui/button" // Assuming you added Button via shadcn CLI
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"

/**
 * Client Component that allows the user to switch between light, dark, and system themes.
 * Must be wrapped by ThemeProvider in the layout.
 */
export function ThemeToggle() {
  const { setTheme } = useTheme()

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button 
            variant="ghost" 
            size="icon"
            aria-label="Toggle theme"
        >
          {/* Sun icon is visible when light (scale-100), Moon icon when dark (dark:scale-100) */}
          <Sun className="h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
          <Moon className="absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
          <span className="sr-only">Toggle theme</span>
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align="end">
        <DropdownMenuItem onClick={() => setTheme("light")}>
          Light
        </DropdownMenuItem>
        <DropdownMenuItem onClick={() => setTheme("dark")}>
          Dark
        </DropdownMenuItem>
        <DropdownMenuItem onClick={() => setTheme("system")}>
          System
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  )
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\layout\Footer.tsx--------------------------------------------------------------------------------// src/components/layout/Footer.tsx
import React from 'react';
import Link from 'next/link';
import { Phone, MapPin, Clock, Mail } from 'lucide-react';
import { Button } from '@/components/ui/button';

export default function Footer() {
    // Current year for copyright date
    const currentYear = new Date().getFullYear();
    return (
        // High-contrast, dark background footer
        <footer className="pt-16 pb-8 bg-neutral-900 dark:bg-neutral-950 text-neutral-300 border-t-8 border-primary/50">
            <div className="container mx-auto px-4 max-w-screen-2xl">

                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-10 md:gap-8 pb-10 mb-8 border-b border-neutral-700">

                    {/* Column 1: Brand & Authority (Span 2 cols on tablet) */}
                     <div className="md:col-span-2 lg:col-span-1">
                        <Link href="/" className="inline-block text-2xl font-extrabold text-white uppercase tracking-tight hover:text-primary transition-colors mb-3">
                             Alberton <span className="text-primary">Tyre Clinic</span> {/* */}
                         </Link>
                        <p className="text-sm leading-relaxed text-neutral-400 max-w-xs mb-4">
                            {/* FIX: Replaced Alberton's with Alberton&apos;s */}
                            Alberton&apos;s trusted **family-run fitment experts since 1989**. We prioritize your safety over sales, guaranteed.
                        </p>

                        {/* Trust Anchor Badges */}
                        <div className="space-y-1 text-xs font-semibold">
                            <span className="text-primary block">✓ Official Pirelli Dealer</span> {/* */}
                             <span className="text-primary block">✓ ATE Braking Specialist</span>
                             <span className="text-primary block">✓ Over 35 Years Service</span>
                         </div> {/* */}
                    </div>

                    {/* Column 2: Core Services & Quick Links (SEO Focus) */}
                    <div>
                        <h4 className="text-lg font-bold uppercase text-white mb-4 border-b border-primary/30 pb-2"> {/* */}
                            Quick Service Links
                        </h4>
                        <ul className="space-y-3 text-sm">
                            <li><Link href="/services" className="hover:text-primary transition-colors">All Services</Link></li>
                            <li><Link href="/about" className="hover:text-primary transition-colors">Our Experts</Link></li>
                            <li><Link href="/blog" className="hover:text-primary transition-colors">Safety Blog</Link></li>
                            <li><Link href="/contact" className="hover:text-primary transition-colors">Contact Us</Link></li>
                            {/* You can add more specific service links here if needed */}
                            {/* <li><Link href="/services/tyres" className="hover:text-primary transition-colors">Tyre Sales & Fitment</Link></li> */}
                            {/* <li><Link href="/services/brakes" className="hover:text-primary transition-colors">Brakes & Shocks</Link></li> */}
                        </ul>
                     </div>


                     {/* Column 3: Contact & Operation (High-Conversion) */}
                    <div> {/* */}
                        <h4 className="text-lg font-bold uppercase text-white mb-4 border-b border-primary/30 pb-2">
                             Contact & Location {/* */}
                        </h4>
                        <ul className="space-y-3 text-sm">
                             <li className="flex items-start">
                                 <MapPin className="h-4 w-4 mr-2 text-primary flex-shrink-0 mt-1" /> {/* */}
                                <a href="https://maps.app.goo.gl/YourMapLink" target="_blank" rel="noopener noreferrer" className="hover:text-primary transition-colors">
                                     26 St Columb St, New Redruth, Alberton {/* */}
                                </a>
                            </li>
                             <li className="flex items-center">
                                 <Phone className="h-4 w-4 mr-2 text-primary flex-shrink-0" /> {/* */}
                                <a href="tel:+27119078495" className="font-extrabold hover:text-primary transition-colors">
                                     +27 11 907 8495 {/* */}
                                </a>
                            </li>
                             <li className="flex items-start">
                                 <Mail className="h-4 w-4 mr-2 mt-1 text-primary flex-shrink-0" /> {/* */}
                                 <a href="mailto:info@albertontyreclinic.co.za" className="break-all hover:text-primary transition-colors">
                                     info@albertontyreclinic.co.za {/* */}
                                </a>
                             </li>
                            <li className="pt-2 flex items-start text-primary font-bold"> {/* */}
                                <Clock className="h-4 w-4 mr-2 flex-shrink-0 mt-1" />
                                <div>
                                    <span>Mon - Fri: 08:00 - 17:00</span>
                                    <br />
                                    <span>Sat: 08:00 - 12:00</span>
                                </div>
                            </li>
                        </ul>
                    </div>

                    {/* Column 4: Primary CTA / Lead Magnet (Adjusted margin for tablet) */}
                     <div className="bg-neutral-800 p-6 rounded-lg border-t-4 border-primary shadow-xl md:mt-10 lg:mt-0"> {/* */}
                        <h4 className="text-xl font-extrabold text-white mb-3">
                            Safety is Free.
                        </h4> {/* */}
                        <p className="text-sm text-neutral-400 mb-4">
                            {/* FIX: Replaced Don't with Don&apos;t and vehicle's with vehicle&apos;s */}
                            Don&apos;t guess your vehicle&apos;s condition. Book your free safety check today.
                        </p>
                         <Button asChild className="w-full bg-primary hover:bg-primary/hover text-white font-bold">
                            <Link href="/assessment">
                                 Book FREE Assessment → {/* */}
                            </Link>
                        </Button>
                     </div>

                </div>


                 {/* Bottom Bar: Legal, Copyright, and Maintenance Credit (Stack on small screens) */}
                <div className="flex flex-col md:flex-row justify-between items-center text-xs text-neutral-500 pt-4 space-y-4 md:space-y-0"> {/* */}

                    {/* Copyright & Maintenance Credit (Combined for visual impact) */}
                     <div className="flex flex-col md:flex-row items-center space-y-2 md:space-y-0 md:space-x-4 text-center md:text-left"> {/* */}
                        <a href="https://www.endpointmedia.co.za" target="_blank" rel="noopener noreferrer" className="font-semibold text-primary hover:text-white transition-colors">
                            Designed, Developed & Maintained by Endpoint Media. {/* Escaped ampersand */}
                        </a> {/* */}
                        <span className="hidden md:inline-block">|</span>
                        <span className="mb-2 md:mb-0">
                             © {currentYear} Alberton Tyre Clinic. All rights reserved. {/* */}
                        </span>
                    </div>

                    {/* Legal Links */}
                    <div className="space-x-4">
                         <Link href="/privacy" className="hover:text-primary transition-colors">Privacy Policy</Link>
                         <span className="hidden md:inline-block">|</span> {/* */}
                        <Link href="/terms" className="hover:text-primary transition-colors">Terms of Service</Link>
                    </div>
                 </div>

            </div>
         </footer> //
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\layout\Header.tsx--------------------------------------------------------------------------------// src/components/layout/Header.tsx
"use client";

import React, { useState } from 'react';
import Link from 'next/link';
import dynamic from 'next/dynamic';
import { ThemeToggle } from '@/components/theme-toggle'; // <-- UNCOMMENT THIS LINE
import { Button } from '@/components/ui/button';
// Keep dynamic imports for Sheet components
const DynamicSheet = dynamic(() => import('@/components/ui/sheet').then((mod) => mod.Sheet), { ssr: false });
const DynamicSheetTrigger = dynamic(() => import('@/components/ui/sheet').then((mod) => mod.SheetTrigger), { ssr: false });
const DynamicSheetContent = dynamic(() => import('@/components/ui/sheet').then((mod) => mod.SheetContent), { ssr: false });
const DynamicSheetClose = dynamic(() => import('@/components/ui/sheet').then((mod) => mod.SheetClose), { ssr: false });
import { Phone, MapPin, Clock, MessageSquareText, Menu, X } from 'lucide-react';
// NAV_LINKS and WHATSAPP_LINK remain the same

const NAV_LINKS = [
    { name: 'Our Experts', href: '/about' },
    { name: 'Services & Brands', href: '/services' },
    { name: 'Blog', href: '/blog' },
    { name: 'Contact Us', href: '/contact' },
];
const WHATSAPP_LINK = "https://wa.me/27119078495?text=Hello%2C%20I%20saw%20your%20website%20and%20need%20a%20quote%20for%20tyres.";


export default function Header() {
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    return (
        <header className="sticky top-0 z-50 w-full">
            {/* Top Bar (Keep as before, but added flex-wrap for responsiveness) */}
            <div className="bg-neutral-900 hidden md:block border-b border-neutral-800">
                <div className="container flex h-10 max-w-screen-2xl items-center justify-end px-4 mx-auto">
                    {/* ... content ... */}
                     <div className="flex flex-wrap items-center justify-end text-xs text-neutral-400 space-x-4 md:space-x-6">
                        <a href="https://maps.app.goo.gl/YourMapLink" target="_blank" rel="noopener noreferrer" className="flex items-center hover:text-white transition-colors">
                            <MapPin className="h-4 w-4 mr-1 text-primary" /> 26 St Columb St, New Redruth, Alberton
                         </a>
                        <a href="tel:+27119078495" className="flex items-center font-bold text-primary hover:text-white transition-colors">
                            <Phone className="h-4 w-4 mr-1" /> +27 11 907 8495
                         </a>
                        <span className="flex items-center">
                            <Clock className="h-4 w-4 mr-1 text-primary" /> Mon - Fri: 08:00 - 17:00 | Sat: 08:00 - 12:00
                        </span>
                    </div>
                </div>
            </div>

            {/* Main Nav Bar */}
             <div className="bg-white/95 dark:bg-neutral-800/95 backdrop-blur supports-[backdrop-filter]:bg-background/80 border-b border-neutral-200 dark:border-neutral-700">
                <div className="container flex h-16 max-w-screen-2xl items-center justify-between px-4 mx-auto">
                    {/* Logo (Adjusted for responsiveness) */}
                    <Link href="/" className="flex items-center space-x-2 mr-4 min-w-0">
                         <span className="font-bold text-lg sm:text-xl md:text-2xl text-neutral-800 dark:text-white uppercase tracking-tight">
                            Alberton <span className="text-primary">Tyre Clinic</span>
                        </span>
                    </Link>

                     {/* Desktop Nav */}
                    <nav className="hidden lg:flex items-center justify-center flex-grow space-x-1 mx-6">
                       {NAV_LINKS.map(link => (
                            <Button key={link.name} variant="ghost" asChild>
                                 <Link
                                    href={link.href}
                                    className="text-sm font-medium text-neutral-700 dark:text-neutral-200 hover:text-primary transition-colors px-3 py-2"
                                >
                                    {link.name}
                                 </Link>
                            </Button>
                        ))}
                    </nav>

                    {/* Right Side (Adjusted spacing) */}
                    <div className="flex items-center space-x-1 sm:space-x-2 flex-shrink-0">
                        {/* WhatsApp Button */}
                        <Button
                             asChild
                            size="sm"
                            className="bg-[#25D366] hover:bg-[#128C7E] text-white font-bold transition-colors shadow-md hidden sm:flex"
                        >
                             <a href={WHATSAPP_LINK} target="_blank" rel="noopener noreferrer" className="flex items-center">
                                <MessageSquareText className="h-4 w-4 mr-1.5" /> WhatsApp Now
                            </a>
                         </Button>
                        {/* Assessment Button */}
                        <Button
                            asChild
                             className="hidden sm:inline-flex bg-primary hover:bg-primary/hover text-white font-bold transition-colors"
                            size="sm"
                        >
                         <Link href="/assessment">
                                FREE Assessment
                            </Link>
                        </Button>

                         {/* UNCOMMENT ThemeToggle */}
                        <ThemeToggle />

                        {/* Mobile Menu (using DynamicSheet components) */}
                         <DynamicSheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>
                            {/* ... SheetTrigger and SheetContent using Dynamic components ... */}
                            <DynamicSheetTrigger asChild>
                                 <Button
                                    variant="ghost"
                                    size="icon"
                                     className="lg:hidden text-neutral-800 dark:text-neutral-200"
                                    aria-label="Open main menu"
                                >
                                     <Menu className="h-6 w-6" />
                                </Button>
                            </DynamicSheetTrigger>
                             <DynamicSheetContent side="right" className="w-[300px] sm:w-[400px] bg-white dark:bg-neutral-900 p-6">
                                <div className="flex justify-between items-center mb-6">
                                    <span className="font-bold text-lg">Menu</span>
                                     <DynamicSheetClose asChild>
                                        <Button variant="ghost" size="icon" aria-label="Close menu">
                                             <X className="h-6 w-6" />
                                        </Button>
                                    </DynamicSheetClose>
                                 </div>
                                <nav className="flex flex-col space-y-3">
                                    {NAV_LINKS.map((link) => (
                                         <DynamicSheetClose asChild key={link.name}>
                                            <Link
                                                 href={link.href}
                                                className="text-lg font-medium text-neutral-700 dark:text-neutral-200 hover:text-primary transition-colors py-2"
                                                 onClick={() => setIsMobileMenuOpen(false)}
                                            >
                                                 {link.name}
                                            </Link>
                                         </DynamicSheetClose>
                                    ))}
                                    <hr className="my-4 border-neutral-200 dark:border-neutral-700"/>
                                     <DynamicSheetClose asChild>
                                        <a href={WHATSAPP_LINK} target="_blank" rel="noopener noreferrer" className="flex items-center text-lg font-medium py-2 text-[#25D366] hover:text-[#128C7E] transition-colors">
                                             <MessageSquareText className="h-5 w-5 mr-2" /> WhatsApp Us
                                        </a>
                                     </DynamicSheetClose>
                                     <DynamicSheetClose asChild>
                                        <Link href="/assessment" className="flex items-center text-lg font-medium py-2 text-primary hover:text-primary/80 transition-colors">
                                             Book FREE Assessment
                                        </Link>
                                     </DynamicSheetClose>
                                </nav>
                            </DynamicSheetContent>
                        </DynamicSheet>
                     </div>
                </div>
            </div>
        </header>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\BrandSlider.tsx--------------------------------------------------------------------------------// src/components/sections/BrandSlider.tsx
"use client"; // <<<--- This directive is correct

import React, { useEffect } from 'react';
import useEmblaCarousel from 'embla-carousel-react';
import { Truck, Disc3, BatteryCharging } from 'lucide-react';
import Link from 'next/link';

// Consolidated Brand List (Used twice for visual infinite looping)
const ALL_BRANDS = [
  { name: "Pirelli", icon: Truck },
  { name: "ATE Brakes", icon: Disc3 },
  { name: "Michelin", icon: Truck },
  { name: "Willard Batteries", icon: BatteryCharging },
  { name: "Bilstein Shocks", icon: Disc3 },
  { name: "BF Goodrich", icon: Truck },
  { name: "Dunlop", icon: Truck },
  { name: "Exide Batteries", icon: BatteryCharging },
];

export default function BrandSlider() {
  // Embla Carousel Setup: We use loop:true and dragFree to enable infinite appearance
  const [emblaRef, emblaApi] = useEmblaCarousel({
      loop: true,
      align: 'start',
      dragFree: true,
      // Play around with speed for a smoother effect if needed
  });

  // Autoplay Logic: Scrolls to the next slide every few seconds
  useEffect(() => {
    if (!emblaApi) return;

    // Use setInterval to continuously trigger a smooth scroll to the next slide
    const autoplay = setInterval(() => {
      // Check if we are near the end, and if so, jump back to the start (optional for cleaner loop visual)
      if (emblaApi.scrollProgress() > 0.99) {
        // Use true for snap, false for immediate jump might be 
        // better visually
        emblaApi.scrollTo(0, false);
      } else {
         emblaApi.scrollNext();
      }
    }, 4000); // Scrolls every 4 seconds

    // Cleanup: Clear interval when the component is unmounted
    return () => clearInterval(autoplay);
  }, [emblaApi]);
  // Re-run effect if emblaApi changes

  return (
    // Minimalistic dark background to contrast with the Hero and main content
    <section className="py-8 bg-neutral-900 dark:bg-neutral-950 text-white border-y border-neutral-700">
      <div className="container mx-auto px-4">

        <p className="text-center text-sm font-semibold uppercase tracking-wider text-neutral-400 mb-4">
          Trusted Partners in Safety & Performance
        </p>

        {/* Carousel Container (Embla Viewport) */}
         <div className="embla overflow-hidden cursor-grab" ref={emblaRef}> {/* */}

          {/* Carousel Wrapper (Embla Container) - Duplicated content for visual infinite effect */}
          {/* RESPONSIVENESS: Reduced mobile horizontal spacing from space-x-8 to space-x-6 */}
          <div className="embla__container flex space-x-6 md:space-x-12"> {/* */}

            {/* Display list twice to ensure seamless looping effect */}
             {[...ALL_BRANDS, ...ALL_BRANDS].map((brand, index) => ( //
              <div
                 key={`${brand.name}-${index}`} // Use a more unique key
                // RESPONSIVENESS: Reduced mobile padding-right from pr-8 to pr-6
                className="embla__slide flex-shrink-0 flex items-center justify-center min-w-max pr-6"
                style={{ flex: '0 0 auto' }}
              > {/* */}
                <Link href="/services" className="flex items-center space-x-2 sm:space-x-3 
 group transition-opacity opacity-80 hover:opacity-100">
                    {/* RESPONSIVENESS: Reduced icon size on small screens */}
                    <brand.icon className="h-5 w-5 sm:h-6 sm:w-6 text-primary group-hover:animate-pulse" />
                    {/* RESPONSIVENESS: Reduced text size on small screens (text-lg) */}
                    <span className="text-lg sm:text-xl md:text-2xl font-bold uppercase whitespace-nowrap text-white">
                      {brand.name}
                     </span> {/* */}
                 </Link>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\BrandsOfAuthority.tsx--------------------------------------------------------------------------------// src/components/sections/BrandsOfAuthority.tsx
// Server Component - High visual impact, no client-side JS.

import React from 'react';
import Link from 'next/link';
import { Truck, Zap, BatteryCharging, Disc3 } from 'lucide-react';
import { Button } from '@/components/ui/button';

// Organized Brand Data for structured display
const BRAND_CATEGORIES = [
  {
    name: "Tyres & Fitment",
    icon: Truck,
    brands: [
      "Pirelli (Dealer)", "Dunlop", "Yokahama", "Kumho",
      "Michelin", "Bridgestone", "BF Goodrich", "Falken"
    ],
    premium: "Pirelli",
  },
  {
    name: "Safety & Suspension",
    icon: Disc3,
    brands: [
      "ATE (Brakes)", "Textar", "Safeline",
      "Bilstein (Shocks)", "Monroe", "Gabriel"
    ],
    premium: "ATE & Bilstein",
  },
  {
    name: "Wheels & Power",
    icon: BatteryCharging,
    brands: [
      "Lenso", "A-Line Wheels", "Black Rhino",
      "Willard (Batteries)", "Exide", "Atlas", "Raylite"
    ],
    premium: "Black Rhino & Willard",
  },
];

export default function BrandsOfAuthority() {
  return (
    // Darker charcoal background for premium visual impact
    <section className="py-24 bg-neutral-900 dark:bg-neutral-950 text-white">
      <div className="container mx-auto px-4 max-w-7xl">

        {/* Title: Hierarchy & Contrast */}
        <header className="text-center mb-16 max-w-4xl mx-auto">
          <h2 className="text-5xl font-extrabold mb-3 text-white">
            Quality You Can <span className="text-primary">Trust.</span>
            Safety We <span className="text-primary">Guarantee.</span>
          </h2>
          <p className="text-xl text-neutral-400">
            {/* Corrected: Replaced 'world's' with 'world&apos;s' */}
            We partner with the world&apos;s leading automotive brands to ensure your vehicle leaves safe, every time.
          </p>
        </header>

        {/* 3-Column Brand Categories Grid */}
        <div className="grid lg:grid-cols-3 gap-10">
           {BRAND_CATEGORIES.map((category) => (
            <div
              key={category.name}
              className="bg-neutral-800 p-8 rounded-xl shadow-2xl border-t-8 border-primary/70"
            > {/* */}
              <category.icon className="h-10 w-10 text-primary mb-4" />
              <h3 className="text-2xl font-bold
 mb-3 text-white"> {/* */}
                {category.name}
              </h3>

              {/* Premium Focus Badge */}
              <p className="text-sm font-semibold text-primary mb-4 border-b border-neutral-700 pb-3">
                 Premium Focus: {category.premium} {/* */}
              </p>

              {/* Brand List: Proximity & Simplicity */}
              <div className="grid grid-cols-2 gap-y-3 gap-x-4">
                {category.brands.map(brand => (
                  <p
                     key={brand} //
                    className="text-neutral-300 text-sm font-medium hover:text-white transition-colors flex items-center"
                  >
                    <Zap className="h-4 w-4 text-primary/80 mr-2 flex-shrink-0" />
                     {brand} {/* */}
                  </p>
                ))}
              </div>
            </div>
          ))}
        </div>

        {/* Closing CTA: Repetition of Lead Magnet */}
         <div className="text-center mt-20"> {/* */}
          <h3 className="text-3xl font-extrabold text-primary mb-4">
            Safety Starts with an Assessment.
          </h3> {/* */}
          <p className="text-xl text-neutral-300 mb-6">
            Let our experts check your entire vehicle, not just the tread.
          </p> {/* */}
          <Button
            asChild
            size="lg"
            className="bg-primary hover:bg-primary/hover text-white text-lg font-bold"
          >
            <Link href="/assessment">Book My FREE 6-Point Assessment</Link>
          </Button>
        </div>
       </div> {/* */}
    </section>
  );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\Hero.tsx--------------------------------------------------------------------------------// src/components/sections/Hero.tsx
// Server Component - Optimized for initial load speed.

import React from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export default function Hero() {
  return (
    // High contrast, dark charcoal background (neutral-800)
    <section className="relative h-screen min-h-[600px] flex items-center justify-center
                        bg-neutral-800 dark:bg-neutral-900 transition-colors duration-500">

      {/* Background/Texture Placeholder */}
      <div
        className="absolute inset-0 opacity-10 dark:opacity-5"> {/* */}
        <div
          
             className="h-full w-full bg-cover bg-center"
            style={{ backgroundImage: `url('/placeholder-tyre-shop-bg.jpg')` }} // Placeholder local background image
        ></div>
      </div>

      {/* Content: Centered and Prominent */}
      <div className="container mx-auto px-4 text-center z-10 max-w-4xl">


         {/* H1: The Core Value Proposition - White Text for Contrast */}
        <h1 className="text-5xl md:text-6xl font-extrabold mb-4
                     text-white uppercase leading-tight"> {/* */}
           {/* FIX: Replaced Don't with Don&apos;t */}
          Don&apos;t Just Change Tyres.
          <span className="text-primary">Invest in Safety.</span>
        </h1>

        {/* H2/Subheading: Strategic Trust Anchors - Clear and High-Impact */}
        <h2 className="text-xl md:text-2xl font-medium mb-4
                       text-neutral-400"> {/* */}
           {/* FIX: Replaced Alberton's with Alberton&apos;s */}
          Alberton&apos;s Family-Run Fitment Experts Since <span className="font-extrabold text-primary">1989.</span>
         </h2>

         {/* Core USP Points - Quick Trust Indicators (Updated to stack on mobile) */}
        <div className="flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6 mb-10 text-lg"> {/* */}
            <span className="flex items-center text-white">
                <span className="text-primary mr-2">✓</span> Pirelli & ATE Quality
            </span>
            
             <span className="flex items-center text-white">
                 <span className="text-primary mr-2">✓</span> Over 35 Years Experience {/* */}
            </span>
        </div>

        {/* Primary Lead Magnet CTA (FREE ASSESSMENT) - Orange Dominant */}
        <Button
            asChild
            size="xl"
  
              className="text-xl md:text-2xl font-bold px-8 sm:px-12 py-8 transition-all
                       bg-primary hover:bg-primary/hover text-white" // Uses orange bg-primary //
        >
          <Link href="/assessment">
            Claim Your FREE 6-Point Vehicle Assessment Today
          </Link>
         </Button>

        {/* Secondary Low-Friction CTA Text */}
        <p className="mt-4 text-sm text-neutral-500">
          *No Obligation. No Hassle. We Check Shocks, Brakes & Batteries. {/* */}
        </p>
      </div>
    </section>
  );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\LocalProof.tsx--------------------------------------------------------------------------------// src/components/sections/LocalProof.tsx
"use client"; // <<<--- ADD THIS DIRECTIVE

import React from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { Star } from 'lucide-react';

export default function LocalProof() {
    return (
        // Bright, primary-colored background to break up the dark sections
        <section className="py-20 bg-primary dark:bg-primary/90 text-white shadow-2xl">
            <div className="container mx-auto px-4 max-w-5xl text-center">

                {/* Main Headline: Local Authority */}
                 <h2 className="text-4xl md:text-5xl font-extrabold mb-4">
                    Don&apos;t Just Take Our Word For It.
                </h2>
                <p className="text-xl mb-10">
                    See why over 500 drivers in Alberton trust our family-run team.
                </p>

                {/* Proof Metrics Grid */}
                <div className="grid sm:grid-cols-3 gap-8 mb-12">

                    {/* Metric 1: Google Rating */}
                    <div className="bg-white dark:bg-neutral-800 text-neutral-800 dark:text-white p-6 rounded-lg shadow-xl">
                        <div className="flex justify-center items-center text-5xl font-bold text-primary mb-2">
                            4.9
                             <Star className="h-8 w-8 ml-2 fill-primary text-primary" />
                        </div>
                        <p className="text-sm font-semibold">Average Google Rating</p>
                    </div>

                     {/* Metric 2: Total Reviews */}
                    <div className="bg-white dark:bg-neutral-800 text-neutral-800 dark:text-white p-6 rounded-lg shadow-xl">
                        <div className="text-5xl font-bold mb-2">
                             500+
                        </div>
                        <p className="text-sm font-semibold text-neutral-600 dark:text-neutral-400">Verified Local Reviews</p>
                    </div>

                    {/* Metric 3: Years Experience */}
                    <div className="bg-white dark:bg-neutral-800 text-neutral-800 dark:text-white p-6 rounded-lg shadow-xl">
                        <div className="text-5xl font-bold text-primary mb-2">
                            28
                         </div>
                        <p className="text-sm font-semibold">Years in Alberton</p>
                    </div>
                </div>

                 {/* Closing CTA */}
                 <Button asChild size="lg" className="bg-white text-primary hover:bg-neutral-100 font-bold">
                    <Link href="/reviews">Read All Our 5-Star Reviews →</Link>
                </Button>
            </div>
        </section>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\OptimizedLocalServicePages.tsx--------------------------------------------------------------------------------// src/components/sections/OptimizedLocalServicePages.tsx
// Server Component - Creates an optimized content structure for local SEO targeting.
import React from 'react';
import Link from 'next/link';
// Removed unused 'DollarSign' import
import { Car, Disc3, Zap, BatteryCharging } from 'lucide-react';

const SEO_OPTIMIZED_SERVICES = [
    {
        title: "Tyres & Rims Alberton",
        h2: "New Tyres & Rims for Sale in Alberton",
        description: "Find the best local prices on Pirelli, Michelin, and Dunlop tyres. Our experts provide precision fitting and balancing to ensure safety and longevity.",
        icon: Car,
        link: "/services/tyres",
        cta: "Get a Tyre Quote Now"
    }, //
    {
        title: "Brake & Disc Service Alberton",
        h2: "Expert ATE Brake Pad & Disc Replacement near You",
        description: "We specialise in comprehensive brake checks and fitting of premium brands like ATE, guaranteeing maximum stopping power and vehicle safety in Alberton.",
        icon: Disc3,
        link: "/services/brakes",
         cta: "Book Brake Service" //
    },
    {
        title: "Shocks & Suspension Alberton",
        h2: "Shocks and Suspension Fitment Experts in Alberton",
        description: "Improve vehicle handling, comfort, and safety with a free shocks assessment. We supply high-quality Bilstein, Monroe, and Gabriel suspension components.",
        icon: Zap,
        link: "/services/shocks",
        cta: "Get Suspension Quote"
    }, //
    {
        title: "Car Batteries Alberton",
        h2: "Willard & Exide Car Batteries and Free Testing",
        description: "Don't get stuck! Visit us for a free battery test. We stock and fit a full range of high-performance Willard and Exide car batteries with a full guarantee.",
        icon: BatteryCharging,
        link: "/services/batteries",
        cta: "Free Battery Test"
    }, //
];

export default function OptimizedLocalServicePages() {
    return (
        // Primary SEO landing page content should not be hidden in this component,
        // but this grid forms the core navigable cluster for long-tail service intent. //
        <section className="py-24 bg-white dark:bg-neutral-800 transition-colors duration-500">
            <div className="container mx-auto px-4 max-w-6xl">

                <header className="text-center mb-16 max-w-4xl mx-auto">
                    {/* The primary keyword for the HOMEPAGE is 'Fitment Center Alberton' / 'Tyre Clinic Alberton'.
                        This H2 targets the core local/transactional services. */}
                    <h2 className="text-4xl font-extrabold text-neutral-800 dark:text-white mb-3">
                         {/* Corrected: Replaced 'Alberton's' with 'Alberton&apos;s' */}
                        Alberton&apos;s Full-Service Fitment Centre: Your Local Experts.
                    </h2> {/* */}
                    <p className="text-xl text-neutral-600 dark:text-neutral-400">
                        We provide complete vehicle safety solutions, specialising in premium parts and certified, reliable service right here in Alberton.
                    </p> {/* */}
                </header>

                {/* Grid for key service links, intentionally using strong keyword titles for link text */}
                <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-8">
                    {SEO_OPTIMIZED_SERVICES.map((service) => (
                         <Link
                            key={service.title}
                            href={service.link}
                            // The H3 below acts as the primary signal for Google on what this page section is about
                            className="group flex flex-col items-center p-6 bg-neutral-100 dark:bg-neutral-900 rounded-xl shadow-lg
                                       hover:bg-primary hover:text-white dark:hover:bg-primary transition-all duration-300 transform hover:scale-[1.02]"
                           > {/* */}
                            <service.icon className="h-10 w-10 text-primary group-hover:text-white mb-3 transition-colors" />

                             {/* This is the primary anchor text for the internal link (crucial for SEO) */}
                            <h3 className="text-lg font-extrabold text-neutral-800 dark:text-white group-hover:text-white transition-colors mb-2 text-center">
                                {service.title}
                             </h3> {/* */}
                            <p className="text-sm text-neutral-600 dark:text-neutral-400 group-hover:text-neutral-200 mb-4 text-center">
                                {service.description}
                             </p> {/* */}
                            <span className="text-sm text-primary group-hover:text-white font-bold underline">
                                {service.cta} →
                             </span> {/* */}
                        </Link>
                    ))}
                </div>
            </div>
        </section>
    );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\ReviewWall.tsx--------------------------------------------------------------------------------// src/components/sections/ReviewWall.tsx
// Server Component - Dynamic display of customer testimonials.

import React from 'react';
import { Star, Zap, DollarSign, HeartHandshake } from 'lucide-react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

const TESTIMONIALS = [
    {
        quote: "Excellent service, with pricing better than I could find from anyone in Alberton on batteries. Staff are knowledgeable and efficient.",
        author: "Marius Senekal",
        claim: "Best Pricing",
        icon: DollarSign,
    },
    {
        quote: "They helped me to replace my brake lights, which is not their core business. This customer service is exemplary and I would gladly refer anyone to them.", //
        author: "Kimberlee Carlson",
        claim: "Exceptional Service (Extra Mile)",
        icon: HeartHandshake,
    },
    {
        quote: "Quick and friendly service and well priced. Will recommend to anyone. They are usually very busy, but that is a sign of good business.",
        author: "Balony The Only",
        claim: "Speed & Value", //
        icon: Zap,
    },
    {
        quote: "My grandfather used them, my dad used them and now I use them. They have been giving great service for 3 generations of my family and they are still the best I know.",
        author: "Craig Joshua Boden",
        claim: "Generational Trust (28 Years)",
        icon: Star,
    },
];

export default function ReviewWall() {
    return (
        // Light background for a clean, professional look
        <section className="py-24 bg-white dark:bg-neutral-800 transition-colors duration-500">
            <div className="container mx-auto px-4 max-w-6xl">

                <header className="text-center mb-16 max-w-3xl mx-auto">
                     <h2 className="text-4xl md:text-5xl font-extrabold text-neutral-800 dark:text-white mb-3">
                        Real Reviews. Real <span className="text-primary">Alberton Trust.</span>
                    </h2> {/* */}
                    <p className="text-xl text-neutral-600 dark:text-neutral-400">
                         {/* Corrected: Replaced 'don't' with 'don&apos;t' */}
                        We don&apos;t just promise service; our customers prove it. Read hundreds more like these on Google.
                    </p> {/* */}
                </header>

                {/* Testimonial Grid with Thematic Focus */}
                 <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6"> {/* */}
                    {TESTIMONIALS.map((review, index) => (
                        <blockquote
                            key={index}
                             className="bg-neutral-100 dark:bg-neutral-900 p-6 rounded-xl shadow-lg border-t-4 border-primary/50 flex flex-col justify-between h-full" //
                        >
                            <review.icon className="h-6 w-6 text-primary mb-3" />
                             {/* Corrected: Replaced surrounding quotes with HTML entities */}
                            <p className="text-lg italic text-neutral-800 dark:text-neutral-200 mb-4">
                                &quot;{review.quote}&quot;
                            </p> {/* */}
                            <footer>
                                 <p className="font-semibold text-sm text-neutral-700 dark:text-neutral-300">
                                    — {review.author}
                                 </p> {/* */}
                                <p className="text-xs font-bold text-primary mt-1">
                                    Claim: {review.claim}
                                 </p> {/* */}
                            </footer>
                        </blockquote>
                    ))}
                </div>


                 {/* Final CTA to View All Proof */}
                <div className="text-center mt-12"> {/* */}
                    <Button variant="outline" asChild size="lg" className="border-primary text-primary hover:bg-primary/5 dark:text-primary dark:border-primary">
                        <Link href="/reviews">View 4.7/5 Stars from 310+ Customers →</Link>
                     </Button> {/* */}
                </div>
            </div>
        </section>
    );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\ServiceFunnel.tsx--------------------------------------------------------------------------------// src/components/sections/ServiceFunnel.tsx
// Server Component - Directing user intent to specific service pages.

import React from 'react';
import Link from 'next/link';
import { Car, Disc3, Zap, BatteryCharging, DollarSign } from 'lucide-react';

const SERVICE_CATEGORIES = [
    { title: "Tyres & Rims", icon: Car, link: "/services/tyres", cta: "Shop Tyres Now" },
    { title: "Brakes & Discs", icon: Disc3, link: "/services/brakes", cta: "Book Brake Service" },
    { title: "Shocks & Suspension", icon: Zap, link: "/services/shocks", cta: "Get Suspension Quote" },
    { title: "Car Batteries", icon: BatteryCharging, link: "/services/batteries", cta: "Free Battery Test" },
    { title: "Promotions & Deals", icon: DollarSign, link: "/promotions", cta: "View Deals" },
];

export default function ServiceFunnel() {
    return (
        // Light background (contrasts with dark proof section above)
        <section className="py-24 bg-white dark:bg-neutral-800 transition-colors duration-500">
            <div className="container mx-auto px-4 max-w-6xl">
                
                <header className="text-center mb-12 max-w-3xl mx-auto">
                    <h2 className="text-4xl font-extrabold text-neutral-800 dark:text-white mb-3">
                        Find Exactly What You Need. Fast.
                    </h2>
                    <p className="text-xl text-neutral-600 dark:text-neutral-400">
                        Select one of our five core service categories to see brands, pricing, and book your fitting instantly.
                    </p>
                </header>

                <div className="grid sm:grid-cols-2 lg:grid-cols-5 gap-4">
                    {SERVICE_CATEGORIES.map((category) => (
                        <Link 
                            key={category.title} 
                            href={category.link} 
                            className="group flex flex-col items-center justify-center p-6 bg-neutral-100 dark:bg-neutral-900 rounded-lg shadow-lg 
                                       hover:bg-primary hover:text-white dark:hover:bg-primary transition-all duration-300"
                        >
                            <category.icon className="h-10 w-10 text-primary group-hover:text-white mb-3 transition-colors" />
                            <h3 className="text-lg font-semibold text-neutral-800 dark:text-white group-hover:text-white transition-colors mb-1">
                                {category.title}
                            </h3>
                            <span className="text-sm text-primary group-hover:text-white font-bold">
                                {category.cta} →
                            </span>
                        </Link>
                    ))}
                </div>
            </div>
        </section>
    );
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\sections\TrustAndProblem.tsx--------------------------------------------------------------------------------// src/components/sections/TrustAndProblem.tsx
// Server Component

import React from 'react';
import { Truck, Shield, DollarSign } from 'lucide-react'; // Trust Icons
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export default function TrustAndProblem() {
  return (
    // Contrasting background (light/white) below the dark hero
    <section className="py-24 bg-white dark:bg-neutral-800 transition-colors duration-500">
      <div className="container mx-auto px-4 max-w-6xl">

        {/* --- Block 1: The TRUST ANCHOR --- */}
        <div className="text-center mb-20">
          <h2 className="text-4xl font-extrabold text-neutral-800 dark:text-white mb-3">
            More Than Tyres. It&apos;s Our Heritage. {/* Escaped It's */}
           </h2> {/* */}
          <p className="text-xl text-neutral-600 dark:text-neutral-400 max-w-3xl mx-auto">
             {/* Corrected: Replaced 'Alberton's' with 'Alberton&apos;s' */}
            We are Alberton&apos;s trusted family-run fitment center, established in 1996. We know your safety matters.
          </p>
        </div>

        {/* Three-Column Trust Pillars */}
        <div className="grid md:grid-cols-3 gap-8 mb-24">


           <div className="text-center p-6 border dark:border-neutral-700 rounded-lg shadow-md hover:shadow-lg transition-shadow"> {/* */}
            <Truck className="h-10 w-10 text-primary mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-neutral-800 dark:text-white mb-2">Local & Reliable</h3>
            <p className="text-neutral-600 dark:text-neutral-400 text-sm">
               {/* Corrected: Replaced 'don't' with 'don&apos;t' */}
              28 years serving Alberton. We don&apos;t guess; we rely on experience to fit your vehicle right, every time.
            </p> {/* */}
          </div>

          <div className="text-center p-6 border dark:border-neutral-700 rounded-lg shadow-md hover:shadow-lg transition-shadow">
            <Shield className="h-10 w-10 text-primary mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-neutral-800 dark:text-white mb-2">Safety First Policy</h3>
            <p className="text-neutral-600 dark:text-neutral-400 text-sm">
               We focus on premium brands (Pirelli, ATE) and assess your full vehicle safety components, not just the tyres. {/* */}
            </p> {/* */}
          </div>

          <div className="text-center p-6 border dark:border-neutral-700 rounded-lg shadow-md hover:shadow-lg transition-shadow">
            <DollarSign className="h-10 w-10 text-primary mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-neutral-800 dark:text-white mb-2">Fair, Honest Pricing</h3>
            <p className="text-neutral-600 dark:text-neutral-400 text-sm">
               We provide the best local pricing and will never upsell a service you don&apos;t actually need. {/* Escaped don't */}
            </p> {/* */}
          </div>
        </div>

        {/* --- Block 2: The Problem/Solution Contrast --- */}
        <div className="grid md:grid-cols-2 gap-12 items-start bg-neutral-100 dark:bg-neutral-900 p-10 rounded-xl border border-primary/20">

          {/* Problem Column */}
          <div className="space-y-6">
            <h3 className="text-3xl
 font-bold text-neutral-800 dark:text-white"> {/* */}
              The Generic Fitment Problem
            </h3>
            <ul className="space-y-3 text-neutral-600 dark:text-neutral-400 text-lg">
              <li className="flex items-start">
                <span className="text-destructive font-extrabold text-2xl mr-3 leading-none">×</span>
                 <p>High-pressure sales and unnecessary upsells based on commission targets.</p> {/* */}
              </li>
              <li className="flex items-start">
                <span className="text-destructive font-extrabold text-2xl mr-3 leading-none">×</span>
                <p>Low-quality assessments that ignore critical safety components (shocks/brakes).</p>
              </li>
               <li className="flex items-start"> {/* */}
                <span className="text-destructive font-extrabold text-2xl mr-3 leading-none">×</span>
                <p>Inexperienced staff leading to improper fitting that can compromise tyre life.</p>
              </li>
            </ul>
          </div>


           {/* Solution Column */}
          <div className="space-y-6"> {/* */}
            <h3 className="text-3xl font-bold text-primary">
              The Alberton Tyre Clinic Difference
            </h3>
            <ul className="space-y-3 text-neutral-800 dark:text-white text-lg">
              <li className="flex items-start">
                 <span className="text-primary font-extrabold text-2xl mr-3 leading-none">✓</span> {/* */}
                <p>Your FREE 6-Point Assessment is Safety-Driven, Not Sales-Driven.</p>
              </li>
              <li className="flex items-start">
                <span className="text-primary font-extrabold text-2xl mr-3 leading-none">✓</span>
                 <p>Honest advice from a family of fitment experts, guaranteed.</p> {/* */}
              </li>
              <li className="flex items-start">
                <span className="text-primary font-extrabold text-2xl mr-3 leading-none">✓</span>
                <p>Precision fitment that maximizes performance, safety, and tyre longevity.</p>
               </li> {/* */}
            </ul>
            <div className="pt-4">
                <Button asChild className="text-lg bg-primary hover:bg-primary/hover">
                    <Link href="/assessment">Book Your Free, Honest Assessment</Link>
                </Button>
             </div> {/* */}
          </div>
        </div>
      </div>
    </section>
  );
} //

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\ui\button.tsx--------------------------------------------------------------------------------import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        // Updated color variants to reference the HSL variables from your theme
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/hover", 
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
        // --- ADDED CUSTOM 'XL' SIZE TO RESOLVE TYPESCRIPT ERROR ---
        xl: "h-14 px-10 text-lg font-bold", // Large, dominant size for primary CTAs
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\ui\dropdown-menu.tsx--------------------------------------------------------------------------------"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\ui\input.tsx--------------------------------------------------------------------------------import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\ui\sheet.tsx--------------------------------------------------------------------------------"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\components\ui\textarea.tsx--------------------------------------------------------------------------------import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\lib\actions.ts--------------------------------------------------------------------------------// src/lib/actions.ts
"use server";

import { db } from '@/lib/db/index';
import { appointments } from '@/lib/db/schema';
// Removed unused 'eq' and 'revalidatePath' imports
import { redirect } from 'next/navigation';
import { z } from 'zod';

// --- 1. Define Form Schema using Zod for Validation ---
const AppointmentSchema = z.object({
  clientName: z.string().min(3, { message: "Name must be at least 3 characters." }),
  phoneNumber: z.string().min(10, { message: "Please provide a valid 10-digit phone number." }),
  serviceType: z.string().optional(),
  message: z.string().optional(),
});

// Define a type for the potential state returned by the action
type FormState = {
    message: string;
    errors?: {
        clientName?: string[];
        phoneNumber?: string[];
        serviceType?: string[];
        message?: string[];
    };
} | null;


// --- 2. The Core Server Action Function ---
// Use the specific 'FormState' type for prevState instead of 'any' or 'unknown'
export async function createAppointment(prevState: FormState, formData: FormData): Promise<FormState> {
  // Extract data from FormData object
  const rawData = {
    clientName: formData.get('clientName'),
    phoneNumber: formData.get('phoneNumber'),
    // Default to 'General Inquiry' if serviceType is missing or empty
    serviceType: formData.get('serviceType') || 'General Inquiry',
    message: formData.get('message'),
  };

  // 3. Validate against Zod Schema
  const validatedFields = AppointmentSchema.safeParse(rawData);
  // If validation fails, return an error object matching FormState
  if (!validatedFields.success) {
    return {
      message: 'Validation Failed.',
      errors: validatedFields.error.flatten().fieldErrors,
    };
  }

  // If validation succeeds, attempt database insertion
  try {
    // 4. Database Write (Drizzle ORM)
    await db.insert(appointments).values({
      clientName: validatedFields.data.clientName,
      phoneNumber: validatedFields.data.phoneNumber,
      serviceType: validatedFields.data.serviceType ?? 'General Inquiry', // Use validated data, ensure fallback
      // message: validatedFields.data.message // Uncomment if you add 'message' to your db schema
    });
    // 5. Success Handling
    // Optional: Revalidate paths if needed
    // revalidatePath('/');

    // Redirect to a confirmation page on success
    redirect('/contact/thanks');

    // Technically unreachable due to redirect, but satisfies return type if redirect were conditional
    // return { message: 'Appointment created successfully!' };

  } catch (error) {
    console.error("Database or Server Error:", error);
    // Return a generic server error message matching FormState
    return {
      message: 'An unexpected server error occurred. Please try again later.',
    };
  }
}

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\lib\utils.ts--------------------------------------------------------------------------------import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\lib\db\index.ts--------------------------------------------------------------------------------// src/lib/db/index.ts
import { drizzle } from 'drizzle-orm/vercel-postgres';
import { sql } from '@vercel/postgres';
import * as schema from './schema'; 

/**
 * Exports the Drizzle PostgreSQL client instance for use in Server Components.
 * This client securely connects to the database using environment variables.
 * * NOTE: This relies on the packages 'drizzle-orm', '@vercel/postgres', and 'drizzle-kit' 
 * being correctly installed and linked by pnpm.
 */
export const db = drizzle(sql, { schema });

--------------------------------------------------------------------------------📄 FILE PATH: C:\Users\User1\alberton-tyre-clinic\src\lib\db\schema.ts--------------------------------------------------------------------------------// src/lib/db/schema.ts
import { pgTable, serial, varchar, timestamp } from 'drizzle-orm/pg-core';

/**
 * Defines the database table for storing client appointment requests.
 */
export const appointments = pgTable('appointments', {
  id: serial('id').primaryKey(),
  clientName: varchar('client_name', { length: 256 }).notNull(),
  serviceType: varchar('service_type', { length: 256 }),
  phoneNumber: varchar('phone_number', { length: 256 }).notNull(),
  preferredDate: timestamp('preferred_date'),
  createdAt: timestamp('created_at').defaultNow(),
});

